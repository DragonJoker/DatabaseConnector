/*
Created: 06/06/2013
Modified: 22/07/2014
Project: ARIA
Model: AriaPhysicalModel
Company: AREVA
Author: Beauté Ivan
Version: 0.2
Database: MySQL 5.5
*/

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

DELIMITER $$


-- Drop tables section ---------------------------------------------------

DROP TABLE IF EXISTS `SG_GEOMETRIC_ZONES`
;
DROP TABLE IF EXISTS `EXAMS_ATTRIBUTES`
;
DROP TABLE IF EXISTS `ACTORS`
;
DROP TABLE IF EXISTS `CONFIGURATIONS_ACTIONS`
;
DROP TABLE IF EXISTS `CONFIGURATIONS`
;
DROP TABLE IF EXISTS `MESSAGES`
;
DROP TABLE IF EXISTS `POK_ACTIONS`
;
DROP TABLE IF EXISTS `FILES`
;
DROP TABLE IF EXISTS `TECHNIQUES_ATTRIBUTES`
;
DROP TABLE IF EXISTS `ACQUISITION_GROUPS_LINES`
;
DROP TABLE IF EXISTS `UNITS_IN_UNIT_CONFIGURATIONS`
;
DROP TABLE IF EXISTS `UNIT_CONFIGURATIONS`
;
DROP TABLE IF EXISTS `TUBES_ZONES`
;
DROP TABLE IF EXISTS `EQUIPMENT_TRACKINGS_ATTRIBUTES`
;
DROP TABLE IF EXISTS `LAYOUTS`
;
DROP TABLE IF EXISTS `ORGANS_ATTRIBUTES`
;
DROP TABLE IF EXISTS `CONTROLS_ATTRIBUTES`
;
DROP TABLE IF EXISTS `SUPERVISOR_CLIENTS`
;
DROP TABLE IF EXISTS `SELECTED_CONTROLS`
;
DROP TABLE IF EXISTS `SELECTED_EQUIPMENTS`
;
DROP TABLE IF EXISTS `TECHNIQUES_EQUIPMENT_TYPES`
;
DROP TABLE IF EXISTS `CONTROL_ZONES_TUBES`
;
DROP TABLE IF EXISTS `INSPECTIONS_ATTRIBUTES`
;
DROP TABLE IF EXISTS `MANWAYS`
;
DROP TABLE IF EXISTS `USERS`
;
DROP TABLE IF EXISTS `QC_SHEET_TYPES_CONFIGURATIONS`
;
DROP TABLE IF EXISTS `CONTROLS_TUBES`
;
DROP TABLE IF EXISTS `EQUIPMENTS`
;
DROP TABLE IF EXISTS `ZONES`
;
DROP TABLE IF EXISTS `EQUIPMENTS_ATTRIBUTES`
;
DROP TABLE IF EXISTS `QC_SHEET_TYPE`
;
DROP TABLE IF EXISTS `TASKS`
;
DROP TABLE IF EXISTS `BACKUP_HISTORIES`
;
DROP TABLE IF EXISTS `QUEUE_FILES_TRANSFER`
;
DROP TABLE IF EXISTS `ACQUISITION_LINES`
;
DROP TABLE IF EXISTS `ACQUISITIONS_EQUIPMENTS`
;
DROP TABLE IF EXISTS `CONTROL_ZONES`
;
DROP TABLE IF EXISTS `EVENTS_HISTORY`
;
DROP TABLE IF EXISTS `EVENTS`
;
DROP TABLE IF EXISTS `EXAMS`
;
DROP TABLE IF EXISTS `ACQUISITIONS`
;
DROP TABLE IF EXISTS `QUALITY_CHECK_RESULT_VALUES`
;
DROP TABLE IF EXISTS `SECTORS`
;
DROP TABLE IF EXISTS `CONTROLS`
;
DROP TABLE IF EXISTS `INSPECTIONS`
;
DROP TABLE IF EXISTS `EQUIPMENT_CONFIGURATIONS`
;
DROP TABLE IF EXISTS `TECHNIQUES`
;
DROP TABLE IF EXISTS `ACQUISITION_GROUPS`
;
DROP TABLE IF EXISTS `QUALITY_CHECK_RESULTS`
;
DROP TABLE IF EXISTS `ACQUISITION_FILES`
;
DROP TABLE IF EXISTS `IOS`
;
DROP TABLE IF EXISTS `EQUIPMENT_TRACKINGS`
;
DROP TABLE IF EXISTS `SG_TUBES`
;
DROP TABLE IF EXISTS `SG_TUBES_GEOMETRIC_ZONES`
;
DROP TABLE IF EXISTS `STEAM_GENERATORS`
;
DROP TABLE IF EXISTS `NUCLEAR_PLANT_UNITS`
;
DROP TABLE IF EXISTS `SITES`
;
DROP TABLE IF EXISTS `ORGANS`
;
DROP TABLE IF EXISTS `EQUIPMENT_TYPES_ATTRIBUTES`
;
DROP TABLE IF EXISTS `ATTRIBUTES`
;
DROP TABLE IF EXISTS `EQUIPMENT_TYPES`
;
DROP TABLE IF EXISTS `TUBES_GEOMETRIC_ZONES`
;
DROP TABLE IF EXISTS `APPLICATION_FUNCTIONALITIES_ROLES`
;
DROP TABLE IF EXISTS `USERS_ROLES`
;
DROP TABLE IF EXISTS `TUBES`
;
DROP TABLE IF EXISTS `GEOMETRIC_ZONES`
;
DROP TABLE IF EXISTS `DATABASE_VERSIONS`
;
DROP TABLE IF EXISTS `ROLES`
;
DROP TABLE IF EXISTS `APPLICATION_FUNCTIONALITIES`
;
DROP TABLE IF EXISTS `STEAM_GENERATOR_TYPES`
;
DROP TABLE IF EXISTS `CONVERSIONS`
;
DROP TABLE IF EXISTS `UNITS`
;
DROP TABLE IF EXISTS `TEXTS`
;
DROP TABLE IF EXISTS `COMPONENTS`
;
DROP TABLE IF EXISTS `LANGUAGES`
;

-- Create tables section -------------------------------------------------

         DROP TABLE IF EXISTS LANGUAGES;

-- Table LANGUAGES

CREATE TABLE  IF NOT EXISTS `LANGUAGES`
(
  `LANGUAGE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `LANGUAGE_NAME` Varchar(5) NOT NULL,
  `LANGUAGE_DESCRIPTION` Varchar(100),
  `LANGUAGE_CREATION_DATE` Datetime NOT NULL,
  `LANGUAGE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`LANGUAGE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `LANGUAGES` ADD UNIQUE `AK_LANGUAGES_LANGUAGE_NAME` (`LANGUAGE_NAME`)
;

         DROP TABLE IF EXISTS COMPONENTS;

-- Table COMPONENTS

CREATE TABLE  IF NOT EXISTS `COMPONENTS`
(
  `COMPONENT_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `COMPONENT_PARENT_ID` Bigint UNSIGNED,
  `COMPONENT_CODE` Varchar(10) NOT NULL,
  `COMPONENT_TYPE` Smallint NOT NULL,
  `COMPONENT_NAME` Varchar(255) NOT NULL,
  `COMPONENT_DESCRIPTION` Varchar(255),
  `COMPONENT_VERSION` Varchar(255) NOT NULL,
  `COMPONENT_SERVER_CONNECTION_STRING` Varchar(255),
  `COMPONENT_CREATION_DATE` Datetime NOT NULL,
  `COMPONENT_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`COMPONENT_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `COMPONENTS` ADD UNIQUE `AK_COMPONENT_NAME_VERSION` (`COMPONENT_NAME`,`COMPONENT_VERSION`)
;

         DROP TABLE IF EXISTS TEXTS;

-- Table TEXTS

CREATE TABLE  IF NOT EXISTS `TEXTS`
(
  `TEXT_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `TEXT_LANGUAGE_ID` Bigint UNSIGNED NOT NULL,
  `TEXT_COMPONENT_ID` Bigint UNSIGNED,
  `TEXT_GROUP_ID` Bigint UNSIGNED,
  `TEXT_KEY` Varchar(100) NOT NULL,
  `TEXT_VALUE` Longtext NOT NULL,
  `TEXT_ERROR_CODE` Varchar(10),
  `TEXT_GROUP_CODE` Varchar(10),
  `TEXT_CREATION_DATE` Datetime NOT NULL,
  `TEXT_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`TEXT_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `TEXTS` ADD UNIQUE `AK_TEXTS_LANGUAGE_ID_KEY` (`TEXT_LANGUAGE_ID`,`TEXT_KEY`)
;

         DROP TABLE IF EXISTS UNITS;

-- Table UNITS

CREATE TABLE  IF NOT EXISTS `UNITS`
(
  `UNIT_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `UNIT_NAME` Varchar(45) NOT NULL,
  `UNIT_SYMBOL` Varchar(10) NOT NULL,
  `UNIT_DIMENSION` Int NOT NULL,
  `UNIT_CREATION_DATE` Datetime NOT NULL,
  `UNIT_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`UNIT_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `UNITS` ADD UNIQUE `AK_UNITS_SYMBOL` (`UNIT_SYMBOL`)
;

         DROP TABLE IF EXISTS CONVERSIONS;

-- Table CONVERSIONS

CREATE TABLE  IF NOT EXISTS `CONVERSIONS`
(
  `CONVERSION_UNIT_SOURCE_ID` Bigint UNSIGNED NOT NULL,
  `CONVERSION_UNIT_DEST_ID` Bigint UNSIGNED NOT NULL,
  `CONVERSION_CONVERTER_TYPE` Smallint NOT NULL,
  `CONVERSION_PARAMETERS` Varchar(255),
  `CONVERSION_CREATION_DATE` Datetime NOT NULL,
  `CONVERSION_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `CONVERSIONS` ADD PRIMARY KEY (`CONVERSION_UNIT_SOURCE_ID`,`CONVERSION_UNIT_DEST_ID`)
;

         DROP TABLE IF EXISTS STEAM_GENERATOR_TYPES;

-- Table STEAM_GENERATOR_TYPES

CREATE TABLE  IF NOT EXISTS `STEAM_GENERATOR_TYPES`
(
  `STEAM_GENERATOR_TYPE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `STEAM_GENERATOR_TYPE_TUBE_MATERIAL_ID` Bigint UNSIGNED,
  `STEAM_GENERATOR_TYPE_FORMULA_ID` Bigint UNSIGNED NOT NULL,
  `STEAM_GENERATOR_TYPE_NAME` Varchar(20) NOT NULL,
  `STEAM_GENERATOR_TYPE_TUBE_EXTERNAL_DIAMETER` Double NOT NULL,
  `STEAM_GENERATOR_TYPE_TUBE_WALL_THICKNESS` Double NOT NULL,
  `STEAM_GENERATOR_TYPE_ROW_SPACING` Double NOT NULL,
  `STEAM_GENERATOR_TYPE_COLUMN_SPACING` Double NOT NULL,
  `STEAM_GENERATOR_TYPE_ANGLE_ROW_AXIS` Int NOT NULL DEFAULT 0,
  `STEAM_GENERATOR_TYPE_ANGLE_COLUMN_AXIS` Int NOT NULL DEFAULT 90,
  `STEAM_GENERATOR_TYPE_CREATION_DATE` Datetime NOT NULL,
  `STEAM_GENERATOR_TYPE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`STEAM_GENERATOR_TYPE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `STEAM_GENERATOR_TYPES` ADD UNIQUE `AK_STEAM_GENERATOR_TYPES_STEAM_GENERATOR_NAME` (`STEAM_GENERATOR_TYPE_NAME`)
;

         DROP TABLE IF EXISTS APPLICATION_FUNCTIONALITIES;

-- Table APPLICATION_FUNCTIONALITIES

CREATE TABLE  IF NOT EXISTS `APPLICATION_FUNCTIONALITIES`
(
  `APPLICATION_FUNCTIONALITY_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `APPLICATION_FUNCTIONALITY_CODE` Char(10) NOT NULL,
  `APPLICATION_FUNCTIONALITY_DESCRIPTION` Varchar(255) NOT NULL,
  `APPLICATION_FUNCTIONALITY_CREATION_DATE` Datetime NOT NULL,
  `APPLICATION_FUNCTIONALITY_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`APPLICATION_FUNCTIONALITY_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `APPLICATION_FUNCTIONALITIES` ADD UNIQUE `AK_APPLICATION_FUNCTIONALITIES_CODE` (`APPLICATION_FUNCTIONALITY_CODE`)
;

         DROP TABLE IF EXISTS ROLES;

-- Table ROLES

CREATE TABLE  IF NOT EXISTS `ROLES`
(
  `ROLE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `ROLE_NAME` Varchar(100) NOT NULL,
  `ROLE_LEVEL` Int NOT NULL,
  `ROLE_CREATION_DATE` Datetime NOT NULL,
  `ROLE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`ROLE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `ROLES` ADD UNIQUE `AK_ROLES_NAME` (`ROLE_NAME`)
;

         DROP TABLE IF EXISTS DATABASE_VERSIONS;

-- Table DATABASE_VERSIONS

CREATE TABLE  IF NOT EXISTS `DATABASE_VERSIONS`
(
  `DATABASE_VERSION_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `DATABASE_VERSION_VALUE` Varchar(20) NOT NULL,
  `DATABASE_VERSION_AUTHOR` Varchar(50),
  `DATABASE_VERSION_CREATION_DATE` Datetime NOT NULL,
  `DATABASE_VERSION_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`DATABASE_VERSION_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `DATABASE_VERSIONS` ADD UNIQUE `AK_DATABASE_VERSIONS_VALUE` (`DATABASE_VERSION_VALUE`)
;

         DROP TABLE IF EXISTS GEOMETRIC_ZONES;

-- Table GEOMETRIC_ZONES

CREATE TABLE  IF NOT EXISTS `GEOMETRIC_ZONES`
(
  `GEOMETRIC_ZONE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `GEOMETRIC_ZONE_STEAM_GENERATOR_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `GEOMETRIC_ZONE_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `GEOMETRIC_ZONE_NAME` Varchar(30) NOT NULL,
  `GEOMETRIC_ZONE_LENGTH` Float NOT NULL,
  `GEOMETRIC_ZONE_SRZ_VALUE` Int,
  `GEOMETRIC_ZONE_LIMIT_PLUS` Float,
  `GEOMETRIC_ZONE_LIMIT_MINUS` Float,
  `GEOMETRIC_ZONE_OVERLAP` Float,
  `GEOMETRIC_ZONE_SIGN_CHANGE` Tinyint(1),
  `GEOMETRIC_ZONE_REPORT_REF` Tinyint(1),
  `GEOMETRIC_ZONE_LEG_TYPE` Smallint NOT NULL,
  `GEOMETRIC_ZONE_CREATION_DATE` Datetime NOT NULL,
  `GEOMETRIC_ZONE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`GEOMETRIC_ZONE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `GEOMETRIC_ZONES` ADD UNIQUE `AK_GEOMETRIC_ZONES_STEAM_GENERATOR_TYPE_ID_GEOMETRIC_ZONE_NAME` (`GEOMETRIC_ZONE_STEAM_GENERATOR_TYPE_ID`,`GEOMETRIC_ZONE_NAME`)
;

         DROP TABLE IF EXISTS TUBES;

-- Table TUBES

CREATE TABLE  IF NOT EXISTS `TUBES`
(
  `TUBE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `TUBE_SECTOR_ID` Bigint UNSIGNED,
  `TUBE_STEAM_GENERATOR_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `TUBE_ROW_HOT_LEG` Int NOT NULL,
  `TUBE_X_HOT_LEG` Float NOT NULL,
  `TUBE_COLUMN_HOT_LEG` Int NOT NULL,
  `TUBE_Y_HOT_LEG` Float NOT NULL,
  `TUBE_ROW_COLD_LEG` Int NOT NULL,
  `TUBE_X_COLD_LEG` Float NOT NULL,
  `TUBE_COLUMN_COLD_LEG` Int NOT NULL,
  `TUBE_Y_COLD_LEG` Float NOT NULL,
  `TUBE_LENGTH` Float NOT NULL,
  `TUBE_CREATION_DATE` Datetime NOT NULL,
  `TUBE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`TUBE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `TUBES` ADD UNIQUE `AK_TUBES_TUBE_ROW_TUBE_COLUMN_STEAM_GENERATOR_TYPE_ID` (`TUBE_STEAM_GENERATOR_TYPE_ID`,`TUBE_ROW_HOT_LEG`,`TUBE_COLUMN_HOT_LEG`)
;

ALTER TABLE `TUBES` ADD UNIQUE `AK_TUBES_TUBE_ROW_CL_TUBE_COLUMN_CL_STEAM_GENERATOR_TYPE_ID` (`TUBE_STEAM_GENERATOR_TYPE_ID`,`TUBE_ROW_COLD_LEG`,`TUBE_COLUMN_COLD_LEG`)
;

         DROP TABLE IF EXISTS USERS_ROLES;

-- Table USERS_ROLES

CREATE TABLE  IF NOT EXISTS `USERS_ROLES`
(
  `ROLE_ID` Bigint UNSIGNED NOT NULL,
  `USER_ID` Bigint UNSIGNED NOT NULL
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `USERS_ROLES` ADD PRIMARY KEY (`ROLE_ID`,`USER_ID`)
;

         DROP TABLE IF EXISTS APPLICATION_FUNCTIONALITIES_ROLES;

-- Table APPLICATION_FUNCTIONALITIES_ROLES

CREATE TABLE  IF NOT EXISTS `APPLICATION_FUNCTIONALITIES_ROLES`
(
  `AFR_APPLICATION_FUNCTIONALITY_ID` Bigint UNSIGNED NOT NULL,
  `AFR_ROLE_ID` Bigint UNSIGNED NOT NULL,
  `AFR_CREATION_DATE` Datetime NOT NULL
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `APPLICATION_FUNCTIONALITIES_ROLES` ADD PRIMARY KEY (`AFR_APPLICATION_FUNCTIONALITY_ID`,`AFR_ROLE_ID`)
;

         DROP TABLE IF EXISTS TUBES_GEOMETRIC_ZONES;

-- Table TUBES_GEOMETRIC_ZONES

CREATE TABLE  IF NOT EXISTS `TUBES_GEOMETRIC_ZONES`
(
  `TUBES_GEOMETRIC_ZONE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `TUBES_GEOMETRIC_ZONE_TUBE_ID` Bigint UNSIGNED NOT NULL,
  `TUBES_GEOMETRIC_ZONE_GEOMETRIC_ZONE_ID` Bigint UNSIGNED NOT NULL,
  `TUBES_GEOMETRIC_ZONE_ALTITUDE` Float NOT NULL,
  `TUBES_GEOMETRIC_ZONE_LENGTH` Float,
  `TUBES_GEOMETRIC_ZONE_CREATION_DATE` Datetime NOT NULL,
  `TUBES_GEOMETRIC_ZONE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`TUBES_GEOMETRIC_ZONE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `TUBES_GEOMETRIC_ZONES` ADD UNIQUE `AK_TUBES_GEOMETRIC_ZONES_TUBE_ID_GEOMETRIC_ZONE_ID` (`TUBES_GEOMETRIC_ZONE_TUBE_ID`,`TUBES_GEOMETRIC_ZONE_GEOMETRIC_ZONE_ID`)
;

         DROP TABLE IF EXISTS EQUIPMENT_TYPES;

-- Table EQUIPMENT_TYPES

CREATE TABLE  IF NOT EXISTS `EQUIPMENT_TYPES`
(
  `EQUIPMENT_TYPE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `EQUIPMENT_TYPE_MANUFACTURER_ID` Bigint UNSIGNED NOT NULL,
  `EQUIPMENT_TYPE_CATEGORY_ID` Bigint UNSIGNED NOT NULL,
  `EQUIPMENT_TYPE_COMPONENT_ID` Bigint UNSIGNED,
  `EQUIPMENT_TYPE_AUTO_DETECT_CATEGORY_ID` Bigint UNSIGNED,
  `EQUIPMENT_TYPE_NAME` Varchar(20) NOT NULL,
  `EQUIPMENT_TYPE_IMAGE` Blob,
  `EQUIPMENT_TYPE_PART_NUMBER` Varchar(30),
  `EQUIPMENT_TYPE_DESCRIPTION` Varchar(255),
  `EQUIPMENT_TYPE_IS_ACQUISITION_LINE_EQUIPMENT` Bool NOT NULL,
  `EQUIPMENT_TYPE_IS_TRACKABLE` Bool NOT NULL,
  `EQUIPMENT_TYPE_IS_TEMPLATE` Tinyint(1) NOT NULL,
  `EQUIPMENT_TYPE_ALLOW_MULTIPLE_SELECTION` Tinyint(1) NOT NULL,
  `EQUIPMENT_TYPE_CUSTOM_ATTRIBUTES_LAYOUT_FILE` Varchar(255),
  `EQUIPMENT_TYPE_EQUIPMENT_CONNECTION_STRING_FORMAT` Varchar(255),
  `EQUIPMENT_TYPE_MODULE_CONNECTION_STRING_FORMAT` Varchar(255),
  `EQUIPMENT_TYPE_FILE_EXTENSION` Varchar(10),
  `EQUIPMENT_TYPE_CREATION_DATE` Datetime NOT NULL,
  `EQUIPMENT_TYPE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`EQUIPMENT_TYPE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `EQUIPMENT_TYPES` ADD UNIQUE `AK_EQUIPMENT_TYPES_EQUIPMENT_TYPE_NAME` (`EQUIPMENT_TYPE_CATEGORY_ID`,`EQUIPMENT_TYPE_NAME`)
;

         DROP TABLE IF EXISTS ATTRIBUTES;

-- Table ATTRIBUTES

CREATE TABLE  IF NOT EXISTS `ATTRIBUTES`
(
  `ATTRIBUTE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `ATTRIBUTE_UNIT_ID` Bigint UNSIGNED,
  `ATTRIBUTE_PARENT_ID` Bigint UNSIGNED,
  `ATTRIBUTE_RELATED_ID` Bigint UNSIGNED,
  `ATTRIBUTE_DATA_TYPE` Smallint,
  `ATTRIBUTE_NAME` Varchar(30) NOT NULL,
  `ATTRIBUTE_FULL_NAME` Varchar(100) NOT NULL,
  `ATTRIBUTE_LABEL` Varchar(50) NOT NULL,
  `ATTRIBUTE_LABEL_TRANSLATION_KEY` Varchar(50) DEFAULT NULL,
  `ATTRIBUTE_DESCRIPTION` Varchar(255) DEFAULT NULL,
  `ATTRIBUTE_NOT_NULL` Tinyint(1) NOT NULL DEFAULT 1,
  `ATTRIBUTE_DEFAULT_VALUE` Varchar(255),
  `ATTRIBUTE_VALUE1` Varchar(255),
  `ATTRIBUTE_VALUE2` Varchar(255),
  `ATTRIBUTE_VALUE_FORMAT` Varchar(255),
  `ATTRIBUTE_CREATION_DATE` Datetime NOT NULL,
  `ATTRIBUTE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`ATTRIBUTE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `ATTRIBUTES` ADD UNIQUE `AK_ATTRIBUTES_ATTRIBUTE_FULL_NAME` (`ATTRIBUTE_FULL_NAME`)
;

CREATE INDEX `T_ATTRIBUTES_ATTRIBUTE_FULL_NAME_I` ON `ATTRIBUTES` (`ATTRIBUTE_FULL_NAME`)
;

         DROP TABLE IF EXISTS EQUIPMENT_TYPES_ATTRIBUTES;

-- Table EQUIPMENT_TYPES_ATTRIBUTES

CREATE TABLE  IF NOT EXISTS `EQUIPMENT_TYPES_ATTRIBUTES`
(
  `ETA_EQUIPMENT_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `ETA_ATTRIBUTE_ID` Bigint UNSIGNED NOT NULL,
  `ETA_VALUE` Varchar(255),
  `ETA_CREATION_DATE` Datetime NOT NULL,
  `ETA_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `EQUIPMENT_TYPES_ATTRIBUTES` ADD PRIMARY KEY (`ETA_EQUIPMENT_TYPE_ID`,`ETA_ATTRIBUTE_ID`)
;

         DROP TABLE IF EXISTS ORGANS;

-- Table ORGANS

CREATE TABLE  IF NOT EXISTS `ORGANS`
(
  `ORGAN_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `ORGAN_SITE_ID` Bigint UNSIGNED NOT NULL,
  `ORGAN_MANUFACTURER_ID` Bigint UNSIGNED NOT NULL,
  `ORGAN_NUCLEAR_PLANT_UNIT_ID` Bigint UNSIGNED,
  `ORGAN_TYPE` Smallint NOT NULL,
  `ORGAN_NAME` Varchar(10) NOT NULL,
  `ORGAN_SERIAL_NUMBER` Varchar(10) NOT NULL,
  `ORGAN_CREATION_DATE` Datetime NOT NULL,
  `ORGAN_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`ORGAN_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `ORGANS` ADD UNIQUE `AK_ORGANS_ORGAN_NAME` (`ORGAN_NAME`)
;

         DROP TABLE IF EXISTS SITES;

-- Table SITES

CREATE TABLE  IF NOT EXISTS `SITES`
(
  `SITE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `SITE_CUSTOMER_ID` Bigint UNSIGNED NOT NULL,
  `SITE_NAME` Varchar(50) NOT NULL,
  `SITE_TYPE` Smallint NOT NULL,
  `SITE_BIGRAM` Varchar(2) NOT NULL,
  `SITE_TRIGRAM` Varchar(3) NOT NULL,
  `SITE_LOCATION` Varchar(255),
  `SITE_IMAGE` Blob,
  `SITE_CREATION_DATE` Datetime NOT NULL,
  `SITE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`SITE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `SITES` ADD UNIQUE `AK_SITES_SITE_NAME` (`SITE_NAME`)
;

ALTER TABLE `SITES` ADD UNIQUE `AK_SITES_SITE_TRIGRAM` (`SITE_TRIGRAM`)
;

ALTER TABLE `SITES` ADD UNIQUE `AK_SITES_SITE_BIGRAM` (`SITE_BIGRAM`)
;

         DROP TABLE IF EXISTS NUCLEAR_PLANT_UNITS;

-- Table NUCLEAR_PLANT_UNITS

CREATE TABLE  IF NOT EXISTS `NUCLEAR_PLANT_UNITS`
(
  `NUCLEAR_PLANT_UNIT_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `NUCLEAR_PLANT_UNIT_SITE_ID` Bigint UNSIGNED NOT NULL,
  `NUCLEAR_PLANT_UNIT_NUMBER` Smallint NOT NULL DEFAULT 1,
  `NUCLEAR_PLANT_UNIT_NAME` Varchar(10),
  `NUCLEAR_PLANT_UNIT_CREATION_DATE` Datetime NOT NULL,
  `NUCLEAR_PLANT_UNIT_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`NUCLEAR_PLANT_UNIT_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `NUCLEAR_PLANT_UNITS` ADD UNIQUE `AK_NUCLEAR_PLANT_UNITS_NUCLEAR_PLANT_UNIT_SITE_ID_NUMBER` (`NUCLEAR_PLANT_UNIT_SITE_ID`,`NUCLEAR_PLANT_UNIT_NUMBER`)
;

         DROP TABLE IF EXISTS STEAM_GENERATORS;

-- Table STEAM_GENERATORS

CREATE TABLE  IF NOT EXISTS `STEAM_GENERATORS`
(
  `STEAM_GENERATOR_ID` Bigint UNSIGNED NOT NULL,
  `STEAM_GENERATOR_STEAM_GENERATOR_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `STEAM_GENERATOR_LOW_ROW` Int NOT NULL,
  `STEAM_GENERATOR_LOOP` Varchar(2),
  `STEAM_GENERATOR_CREATION_DATE` Datetime NOT NULL,
  `STEAM_GENERATOR_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `STEAM_GENERATORS` ADD PRIMARY KEY (`STEAM_GENERATOR_ID`)
;

         DROP TABLE IF EXISTS SG_TUBES_GEOMETRIC_ZONES;

-- Table SG_TUBES_GEOMETRIC_ZONES

CREATE TABLE  IF NOT EXISTS `SG_TUBES_GEOMETRIC_ZONES`
(
  `SG_TUBES_GEOMETRIC_ZONE_ID` Bigint UNSIGNED NOT NULL,
  `SG_TUBES_GEOMETRIC_ZONE_STEAM_GENERATOR_ID` Bigint UNSIGNED NOT NULL,
  `SG_TUBES_GEOMETRIC_ZONE_ALTITUDE` Float NOT NULL,
  `SG_TUBES_GEOMETRIC_ZONE_CREATION_DATE` Datetime NOT NULL,
  `SG_TUBES_GEOMETRIC_ZONE_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `SG_TUBES_GEOMETRIC_ZONES` ADD PRIMARY KEY (`SG_TUBES_GEOMETRIC_ZONE_STEAM_GENERATOR_ID`,`SG_TUBES_GEOMETRIC_ZONE_ID`)
;

         DROP TABLE IF EXISTS SG_TUBES;

-- Table SG_TUBES

CREATE TABLE  IF NOT EXISTS `SG_TUBES`
(
  `SG_TUBE_STEAM_GENERATOR_ID` Bigint UNSIGNED NOT NULL,
  `SG_TUBE_TUBE_ID` Bigint UNSIGNED NOT NULL,
  `SG_TUBE_HOT_LEG_OBSTRUCTION_STATE` Smallint NOT NULL,
  `SG_TUBE_COLD_LEG_OBSTRUCTION_STATE` Smallint NOT NULL,
  `SG_TUBE_SERIAL_NUMBER` Varchar(10),
  `SG_TUBE_CREATION_DATE` Datetime NOT NULL,
  `SG_TUBE_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `SG_TUBES` ADD PRIMARY KEY (`SG_TUBE_STEAM_GENERATOR_ID`,`SG_TUBE_TUBE_ID`)
;

-- Create triggers for table SG_TUBES

CREATE TRIGGER `Up` BEFORE INSERT
 ON `SG_TUBES`
 FOR EACH ROW
BEGIN
    /*trigger_body*/
END
;

         DROP TABLE IF EXISTS EQUIPMENT_TRACKINGS;

-- Table EQUIPMENT_TRACKINGS

CREATE TABLE  IF NOT EXISTS `EQUIPMENT_TRACKINGS`
(
  `EQUIPMENT_TRACKING_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `EQUIPMENT_TRACKING_EQUIPMENT_ID` Bigint UNSIGNED NOT NULL,
  `EQUIPMENT_TRACKING_CONTROL_ID` Bigint UNSIGNED NOT NULL,
  `EQUIPMENT_TRACKING_USER_ID` Bigint UNSIGNED,
  `EQUIPMENT_TRACKING_CONDITION` Int NOT NULL,
  `EQUIPMENT_TRACKING_FME_STATUS` Smallint NOT NULL,
  `EQUIPMENT_TRACKING_INSTALL_DATE` Datetime NOT NULL,
  `EQUIPMENT_TRACKING_REMOVAL_DATE` Datetime,
  `EQUIPMENT_TRACKING_LINE_NUMBER` Smallint,
  `EQUIPMENT_TRACKING_REMOVAL_COMMENT` Longtext,
  `EQUIPMENT_TRACKING_FOLDER_NAME` Varchar(255) NOT NULL,
  `EQUIPMENT_TRACKING_MISSING_PARTS` Text,
  `EQUIPMENT_TRACKING_CREATION_DATE` Datetime NOT NULL,
  `EQUIPMENT_TRACKING_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`EQUIPMENT_TRACKING_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

         DROP TABLE IF EXISTS IOS;

-- Table IOS

CREATE TABLE  IF NOT EXISTS `IOS`
(
  `IO_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `IO_EQUIPMENT_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `IO_UNIT_ID` Bigint UNSIGNED,
  `IO_DATA_TYPE` Smallint NOT NULL,
  `IO_NAME` Varchar(30) NOT NULL,
  `IO_IS_INPUT` Bool NOT NULL,
  `IO_TECHNICAL_ADDRESS` Varchar(255) NOT NULL,
  `IO_CREATION_DATE` Datetime NOT NULL,
  `IO_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`IO_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

         DROP TABLE IF EXISTS ACQUISITION_FILES;

-- Table ACQUISITION_FILES

CREATE TABLE  IF NOT EXISTS `ACQUISITION_FILES`
(
  `ACQUISITION_FILE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `ACQUISITION_FILE_ACQUISITION_ID` Bigint UNSIGNED NOT NULL,
  `ACQUISITION_FILE_TYPE` Smallint NOT NULL,
  `ACQUISITION_FILE_NAME` Varchar(255) NOT NULL,
  `ACQUISITION_FILE_TRANSFER_DATE` Datetime,
  `ACQUISITION_FILE_CREATION_DATE` Datetime NOT NULL,
  `ACQUISITION_FILE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`ACQUISITION_FILE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `ACQUISITION_FILES` ADD UNIQUE `AK_ACQUISITION_FILES_ACQUISITION_ID_NAME` (`ACQUISITION_FILE_NAME`,`ACQUISITION_FILE_ACQUISITION_ID`)
;

         DROP TABLE IF EXISTS QUALITY_CHECK_RESULTS;

-- Table QUALITY_CHECK_RESULTS

CREATE TABLE  IF NOT EXISTS `QUALITY_CHECK_RESULTS`
(
  `QUALITY_CHECK_RESULT_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `QUALITY_CHECK_RESULT_ACQUISITION_FILE_ID` Bigint UNSIGNED,
  `QUALITY_CHECK_RESULT_IS_VQ` Bool NOT NULL,
  `QUALITY_CHECK_RESULT_CODE` Varchar(10) NOT NULL,
  `QUALITY_CHECK_RESULT_LABEL` Varchar(255),
  `QUALITY_CHECK_RESULT_CREATION_DATE` Datetime NOT NULL,
  `QUALITY_CHECK_RESULT_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`QUALITY_CHECK_RESULT_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

         DROP TABLE IF EXISTS ACQUISITION_GROUPS;

-- Table ACQUISITION_GROUPS

CREATE TABLE  IF NOT EXISTS `ACQUISITION_GROUPS`
(
  `ACQUISITION_GROUP_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `ACQUISITION_GROUP_CONTROL_ID` Bigint UNSIGNED NOT NULL,
  `ACQUISITION_GROUP_STATE` Smallint NOT NULL,
  `ACQUISITION_GROUP_NUMBER` Int NOT NULL,
  `ACQUISITION_GROUP_NAME` Varchar(100) NOT NULL,
  `ACQUISITION_GROUP_DIRECTORY` Varchar(255) NOT NULL,
  `ACQUISITION_GROUP_CREATION_DATE` Datetime NOT NULL,
  `ACQUISITION_GROUP_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`ACQUISITION_GROUP_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `ACQUISITION_GROUPS` ADD UNIQUE `AK_ACQUISITION_GROUPS_CONTROL_ID_NUMBER` (`ACQUISITION_GROUP_CONTROL_ID`,`ACQUISITION_GROUP_NUMBER`)
;

         DROP TABLE IF EXISTS TECHNIQUES;

-- Table TECHNIQUES

CREATE TABLE  IF NOT EXISTS `TECHNIQUES`
(
  `TECHNIQUE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `TECHNIQUE_PARENT_ID` Bigint UNSIGNED,
  `TECHNIQUE_NAME` Varchar(100) NOT NULL,
  `TECHNIQUE_VERSION` Varchar(5) NOT NULL,
  `TECHNIQUE_DESCRIPTION` Longtext,
  `TECHNIQUE_CREATION_DATE` Datetime NOT NULL,
  `TECHNIQUE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`TECHNIQUE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `TECHNIQUES` ADD UNIQUE `AK_TECHNIQUES_NAME_VERSION` (`TECHNIQUE_NAME`,`TECHNIQUE_VERSION`)
;

         DROP TABLE IF EXISTS EQUIPMENT_CONFIGURATIONS;

-- Table EQUIPMENT_CONFIGURATIONS

CREATE TABLE  IF NOT EXISTS `EQUIPMENT_CONFIGURATIONS`
(
  `EQUIPMENT_CONFIGURATION_ID` Bigint UNSIGNED NOT NULL,
  `EQUIPMENT_CONFIGURATION_CONTROL_ID` Bigint UNSIGNED,
  `EQUIPMENT_CONFIGURATION_LINE_NUMBER` Int,
  `EQUIPMENT_CONFIGURATION_CONFIGURATION_NAME` Varchar(100) NOT NULL,
  `EQUIPMENT_CONFIGURATION_DESCRIPTION` Longtext,
  `EQUIPMENT_CONFIGURATION_CREATION_DATE` Datetime NOT NULL,
  `EQUIPMENT_CONFIGURATION_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `EQUIPMENT_CONFIGURATIONS` ADD PRIMARY KEY (`EQUIPMENT_CONFIGURATION_ID`)
;

ALTER TABLE `EQUIPMENT_CONFIGURATIONS` ADD UNIQUE `AK_EQUIPMENT_CONFIGURATIONS_NAME_VERSION` (`EQUIPMENT_CONFIGURATION_CONFIGURATION_NAME`)
;

         DROP TABLE IF EXISTS INSPECTIONS;

-- Table INSPECTIONS

CREATE TABLE  IF NOT EXISTS `INSPECTIONS`
(
  `INSPECTION_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `INSPECTION_CONTRACTOR_ID` Bigint UNSIGNED NOT NULL,
  `INSPECTION_SITE_ID` Bigint UNSIGNED NOT NULL,
  `INSPECTION_NUCLEAR_PLANT_UNIT_ID` Bigint UNSIGNED,
  `INSPECTION_UNIT_CONFIGURATION_ID` Bigint UNSIGNED NOT NULL,
  `INSPECTION_NAME` Varchar(50) NOT NULL,
  `INSPECTION_NUMBER` Varchar(50) NOT NULL,
  `INSPECTION_START_DATE` Datetime NOT NULL,
  `INSPECTION_FINISH_DATE` Datetime,
  `INSPECTION_COMMENT` Text,
  `INSPECTION_CREATION_DATE` Datetime NOT NULL,
  `INSPECTION_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`INSPECTION_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `INSPECTIONS` ADD UNIQUE `AK_INSPECTIONS_INSPECTION_NAME` (`INSPECTION_NAME`)
;

         DROP TABLE IF EXISTS CONTROLS;

-- Table CONTROLS

CREATE TABLE  IF NOT EXISTS `CONTROLS`
(
  `CONTROL_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `CONTROL_LINKED_ID` Bigint UNSIGNED,
  `CONTROL_INSPECTION_ID` Bigint UNSIGNED NOT NULL,
  `CONTROL_ORGAN_ID` Bigint UNSIGNED NOT NULL,
  `CONTROL_TECHNIQUE_ID` Bigint UNSIGNED NOT NULL,
  `CONTROL_SECTOR_ID` Bigint UNSIGNED,
  `CONTROL_END_ZONE_ID` Bigint UNSIGNED,
  `CONTROL_BEGIN_ZONE_ID` Bigint UNSIGNED,
  `CONTROL_STATE` Smallint NOT NULL,
  `CONTROL_OPTION` Smallint NOT NULL,
  `CONTROL_MODE` Smallint NOT NULL,
  `CONTROL_DATA_FORMAT` Smallint NOT NULL,
  `CONTROL_LEG_TYPE` Smallint NOT NULL,
  `CONTROL_NAME` Varchar(100) NOT NULL,
  `CONTROL_ORDER` Int(11) NOT NULL,
  `CONTROL_PROCEDURE1` Varchar(100),
  `CONTROL_PROCEDURE2` Varchar(100),
  `CONTROL_START_DATE` Datetime NOT NULL,
  `CONTROL_FINISH_DATE` Datetime,
  `CONTROL_COMMENT` Text,
  `CONTROL_SAVE_ALL_DATA` Tinyint(1) NOT NULL,
  `CONTROL_BEGIN_OFFSET` Float,
  `CONTROL_END_OFFSET` Float,
  `CONTROL_CREATION_DATE` Datetime NOT NULL,
  `CONTROL_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`CONTROL_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `CONTROLS` ADD UNIQUE `AK_CONTROLS_CONTROL_NAME` (`CONTROL_NAME`)
;

         DROP TABLE IF EXISTS SECTORS;

-- Table SECTORS

CREATE TABLE  IF NOT EXISTS `SECTORS`
(
  `SECTOR_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `SECTOR_STEAM_GENERATOR_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `SECTOR_NUMBER` Int NOT NULL,
  `SECTOR_CREATION_DATE` Datetime NOT NULL,
  `SECTOR_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`SECTOR_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `SECTORS` ADD UNIQUE `AK_SECTORS_SECTOR_NUMBER_STEAM_GENERATOR_TYPE_ID` (`SECTOR_STEAM_GENERATOR_TYPE_ID`,`SECTOR_NUMBER`)
;

         DROP TABLE IF EXISTS QUALITY_CHECK_RESULT_VALUES;

-- Table QUALITY_CHECK_RESULT_VALUES

CREATE TABLE  IF NOT EXISTS `QUALITY_CHECK_RESULT_VALUES`
(
  `QUALITY_CHECK_RESULT_VALUE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `QUALITY_CHECK_RESULT_VALUE_QUALITY_CHECK_RESULT_ID` Bigint UNSIGNED NOT NULL,
  `QUALITY_CHECK_RESULT_VALUE_UNIT_ID` Bigint UNSIGNED,
  `QUALITY_CHECK_RESULT_VALUE_DATA_TYPE` Smallint NOT NULL,
  `QUALITY_CHECK_RESULT_VALUE_VALUE` Varchar(20) NOT NULL,
  `QUALITY_CHECK_RESULT_VALUE_VALUE_MIN` Varchar(20),
  `QUALITY_CHECK_RESULT_VALUE_VALUE_MAX` Varchar(20),
  `QUALITY_CHECK_RESULT_VALUE_DEVIATION` Varchar(20),
  `QUALITY_CHECK_RESULT_VALUE_CREATION_DATE` Datetime NOT NULL,
  `QUALITY_CHECK_RESULT_VALUE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`QUALITY_CHECK_RESULT_VALUE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

         DROP TABLE IF EXISTS ACQUISITIONS;

-- Table ACQUISITIONS

CREATE TABLE  IF NOT EXISTS `ACQUISITIONS`
(
  `ACQUISITION_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `ACQUISITION_ACQUISITION_GROUP_ID` Bigint UNSIGNED NOT NULL,
  `ACQUISITION_PARENT_ID` Bigint UNSIGNED,
  `ACQUISITION_CHILD_ID` Bigint UNSIGNED,
  `ACQUISITION_EXAM_ID` Bigint UNSIGNED,
  `ACQUISITION_TYPE` Smallint NOT NULL,
  `ACQUISITION_CYCLE_STATE` Smallint NOT NULL,
  `ACQUISITION_POSITION_OK` Bool NOT NULL,
  `ACQUISITION_IS_AUTOMATIC_MODE` Tinyint(1) NOT NULL,
  `ACQUISITION_QUALITY_CHECK_STATE` Smallint NOT NULL,
  `ACQUISITION_CYCLE_NAME` Varchar(200) NOT NULL,
  `ACQUISITION_BEGIN_DATE` Datetime NOT NULL,
  `ACQUISITION_FINISH_DATE` Datetime,
  `ACQUISITION_RESUME_REASON` Varchar(255),
  `ACQUISITION_RESUME_CODE` Varchar(20),
  `ACQUISITION_RESUME_TRANSMITTER` Varchar(100),
  `ACQUISITION_CREATION_DATE` Datetime NOT NULL,
  `ACQUISITION_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`ACQUISITION_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

         DROP TABLE IF EXISTS EXAMS;

-- Table EXAMS

CREATE TABLE  IF NOT EXISTS `EXAMS`
(
  `EXAM_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `EXAM_CONTROL_ID` Bigint UNSIGNED NOT NULL,
  `EXAM_TUBE_ID` Bigint UNSIGNED NOT NULL,
  `EXAM_BEGIN_ZONE_ID` Bigint UNSIGNED NOT NULL,
  `EXAM_END_ZONE_ID` Bigint UNSIGNED NOT NULL,
  `EXAM_DIRECTION` Smallint NOT NULL,
  `EXAM_BEGIN_OFFSET` Float,
  `EXAM_END_OFFSET` Float,
  `EXAM_TRANSLATION_SPEED` Double NOT NULL,
  `EXAM_ROTATION_SPEED` Double,
  `EXAM_CREATION_DATE` Datetime NOT NULL,
  `EXAM_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`EXAM_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `EXAMS` ADD UNIQUE `AK_EXAMS_BEGIN_ZONE_ID_END_ZONE_ID` (`EXAM_BEGIN_ZONE_ID`,`EXAM_END_ZONE_ID`,`EXAM_CONTROL_ID`)
;

         DROP TABLE IF EXISTS EVENTS;

-- Table EVENTS

CREATE TABLE  IF NOT EXISTS `EVENTS`
(
  `EVENT_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `EVENT_CONTROL_ID` Bigint UNSIGNED,
  `EVENT_ACQUISITION_GROUP_ID` Bigint UNSIGNED,
  `EVENT_TYPE` Smallint NOT NULL,
  `EVENT_LEVEL` Smallint NOT NULL,
  `EVENT_LINE_NUMBER` Int,
  `EVENT_CODE` Varchar(20) NOT NULL,
  `EVENT_SOURCE` Varchar(100) NOT NULL,
  `EVENT_DESCRIPTION` Text NOT NULL,
  `EVENT_DETAIL1` Text,
  `EVENT_DETAIL2` Text,
  `EVENT_ACQUIT_DATE` Datetime,
  `EVENT_CREATION_DATE` Datetime NOT NULL,
  `EVENT_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`EVENT_ID`)
) ENGINE = MyISAM
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

CREATE INDEX `T_EVENTS_EVENT_CREATION_DATE_I` USING BTREE ON `EVENTS` (`EVENT_CREATION_DATE`)
;

CREATE INDEX `T_EVENTS_EVENT_CONTROL_ID_I` ON `EVENTS` (`EVENT_CONTROL_ID`)
;

CREATE INDEX `T_EVENTS_EVENT_ACQUISITION_GROUP_ID_I` ON `EVENTS` (`EVENT_ACQUISITION_GROUP_ID`)
;

CREATE INDEX `T_EVENTS_EVENT_TYPE_I` ON `EVENTS` (`EVENT_TYPE`)
;

CREATE INDEX `T_EVENTS_EVENT_LEVEL_I` ON `EVENTS` (`EVENT_LEVEL`)
;

CREATE INDEX `T_EVENTS_EVENT_LINE_NUMBER_I` ON `EVENTS` (`EVENT_LINE_NUMBER`)
;

CREATE INDEX `T_EVENTS_EVENT_SOURCE_I` ON `EVENTS` (`EVENT_SOURCE`)
;

CREATE INDEX `T_EVENTS_EVENT_CODE_I` ON `EVENTS` (`EVENT_CODE`)
;

CREATE INDEX `T_EVENTS_EVENT_ACQUIT_DATE_I` ON `EVENTS` (`EVENT_ACQUIT_DATE`)
;

CREATE INDEX `T_EVENTS_EVENT_MODIFICATION_DATE_I` ON `EVENTS` (`EVENT_MODIFICATION_DATE`)
;

-- Create triggers for table EVENTS

CREATE TRIGGER `TrigBeforeDeleteEvent` BEFORE DELETE
 ON `EVENTS`
 FOR EACH ROW
BEGIN
    INSERT INTO EVENTS_HISTORY 
    (   EVENT_ID,
        EVENT_CONTROL_ID,
        EVENT_ACQUISITION_GROUP_ID,
        EVENT_TYPE,
        EVENT_LEVEL,
        EVENT_LINE_NUMBER,
        EVENT_CODE, 
        EVENT_SOURCE, 
        EVENT_DESCRIPTION, 
        EVENT_DETAIL1, 
        EVENT_DETAIL2,
        EVENT_ACQUIT_DATE, 
        EVENT_CREATION_DATE,
        EVENT_MODIFICATION_DATE)
    VALUES
    (   OLD.EVENT_ID,
        OLD.EVENT_CONTROL_ID,
        OLD.EVENT_ACQUISITION_GROUP_ID,
        OLD.EVENT_TYPE,
        OLD.EVENT_LEVEL,
        OLD.EVENT_LINE_NUMBER,
        OLD.EVENT_CODE,
        OLD.EVENT_SOURCE,
        OLD.EVENT_DESCRIPTION,
        OLD.EVENT_DETAIL1,
        OLD.EVENT_DETAIL2, 
        OLD.EVENT_ACQUIT_DATE,
        OLD.EVENT_CREATION_DATE,
        OLD.EVENT_MODIFICATION_DATE);
END
;

         DROP TABLE IF EXISTS EVENTS_HISTORY;

-- Table EVENTS_HISTORY

CREATE TABLE  IF NOT EXISTS `EVENTS_HISTORY`
(
  `EVENT_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `EVENT_CONTROL_ID` Bigint UNSIGNED,
  `EVENT_ACQUISITION_GROUP_ID` Bigint UNSIGNED,
  `EVENT_TYPE` Smallint NOT NULL,
  `EVENT_LEVEL` Smallint NOT NULL,
  `EVENT_LINE_NUMBER` Int,
  `EVENT_CODE` Varchar(20) NOT NULL,
  `EVENT_SOURCE` Varchar(100) NOT NULL,
  `EVENT_DESCRIPTION` Text NOT NULL,
  `EVENT_DETAIL1` Text,
  `EVENT_DETAIL2` Text,
  `EVENT_ACQUIT_DATE` Datetime,
  `EVENT_CREATION_DATE` Datetime NOT NULL,
  `EVENT_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`EVENT_ID`)
) ENGINE = MyISAM
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

CREATE INDEX `T_EVENTS_EVENT_CREATION_DATE_I` USING BTREE ON `EVENTS_HISTORY` (`EVENT_CREATION_DATE`)
;

CREATE INDEX `T_EVENTS_EVENT_CONTROL_ID_I` ON `EVENTS_HISTORY` (`EVENT_CONTROL_ID`)
;

CREATE INDEX `T_EVENTS_EVENT_ACQUISITION_GROUP_ID_I` ON `EVENTS_HISTORY` (`EVENT_ACQUISITION_GROUP_ID`)
;

CREATE INDEX `T_EVENTS_EVENT_TYPE_I` ON `EVENTS_HISTORY` (`EVENT_TYPE`)
;

CREATE INDEX `T_EVENTS_EVENT_LEVEL_I` ON `EVENTS_HISTORY` (`EVENT_LEVEL`)
;

CREATE INDEX `T_EVENTS_EVENT_LINE_NUMBER_I` ON `EVENTS_HISTORY` (`EVENT_LINE_NUMBER`)
;

CREATE INDEX `T_EVENTS_EVENT_SOURCE_I` ON `EVENTS_HISTORY` (`EVENT_SOURCE`)
;

CREATE INDEX `T_EVENTS_EVENT_CODE_I` ON `EVENTS_HISTORY` (`EVENT_CODE`)
;

CREATE INDEX `T_EVENTS_EVENT_ACQUIT_DATE_I` ON `EVENTS_HISTORY` (`EVENT_ACQUIT_DATE`)
;

CREATE INDEX `T_EVENTS_EVENT_MODIFICATION_DATE_I` ON `EVENTS_HISTORY` (`EVENT_MODIFICATION_DATE`)
;

         DROP TABLE IF EXISTS CONTROL_ZONES;

-- Table CONTROL_ZONES

CREATE TABLE  IF NOT EXISTS `CONTROL_ZONES`
(
  `CONTROL_ZONE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `CONTROL_ZONE_CONTROL_ID` Bigint UNSIGNED NOT NULL,
  `CONTROL_ZONE_TECHNIQUE_ID` Bigint UNSIGNED NOT NULL,
  `CONTROL_ZONE_NAME` Varchar(100) NOT NULL,
  `CONTROL_ZONE_CREATION_DATE` Datetime NOT NULL,
  `CONTROL_ZONE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`CONTROL_ZONE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `CONTROL_ZONES` ADD UNIQUE `AK_CONTROL_ZONES_CONTROL_NAME` (`CONTROL_ZONE_CONTROL_ID`,`CONTROL_ZONE_NAME`)
;

         DROP TABLE IF EXISTS ACQUISITIONS_EQUIPMENTS;

-- Table ACQUISITIONS_EQUIPMENTS

CREATE TABLE  IF NOT EXISTS `ACQUISITIONS_EQUIPMENTS`
(
  `ACQUISITION_EQUIPMENT_ACQUISITION_ID` Bigint UNSIGNED NOT NULL,
  `ACQUISITION_EQUIPMENT_EQUIPMENT_ID` Bigint UNSIGNED NOT NULL,
  `ACQUISITION_EQUIPMENT_CREATION_DATE` Datetime NOT NULL
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `ACQUISITIONS_EQUIPMENTS` ADD PRIMARY KEY (`ACQUISITION_EQUIPMENT_ACQUISITION_ID`,`ACQUISITION_EQUIPMENT_EQUIPMENT_ID`)
;

         DROP TABLE IF EXISTS ACQUISITION_LINES;

-- Table ACQUISITION_LINES

CREATE TABLE  IF NOT EXISTS `ACQUISITION_LINES`
(
  `ACQUISITION_LINE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `ACQUISITION_LINE_NUMBER` Smallint NOT NULL DEFAULT 1,
  `ACQUISITION_LINE_LABEL` Varchar(255) NOT NULL,
  `ACQUISITION_LINE_COLOR` Int NOT NULL,
  `ACQUISITION_LINE_CREATION_DATE` Datetime NOT NULL,
  `ACQUISITION_LINE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`ACQUISITION_LINE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `ACQUISITION_LINES` ADD UNIQUE `AK_ACQUISITION_LINES_NUMBER` (`ACQUISITION_LINE_NUMBER`)
;

         DROP TABLE IF EXISTS QUEUE_FILES_TRANSFER;

-- Table QUEUE_FILES_TRANSFER

CREATE TABLE  IF NOT EXISTS `QUEUE_FILES_TRANSFER`
(
  `QUEUE_FILE_TRANSFER_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `QUEUE_FILE_TRANSFER_CONTROL_ID` Bigint UNSIGNED NOT NULL,
  `QUEUE_FILE_TRANSFER_STATUS` Smallint NOT NULL,
  `QUEUE_FILE_TRANSFER_SOURCE` Varchar(255) NOT NULL,
  `QUEUE_FILE_TRANSFER_DESTINATION` Varchar(255) NOT NULL,
  `QUEUE_FILE_TRANSFER_PRIORITY` Int NOT NULL,
  `QUEUE_FILE_TRANSFER_CREATION_DATE` Datetime NOT NULL,
  `QUEUE_FILE_TRANSFER_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`QUEUE_FILE_TRANSFER_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `QUEUE_FILES_TRANSFER` ADD UNIQUE `AK_QUEUE_FILE_TRANSFER_SOURCE` (`QUEUE_FILE_TRANSFER_SOURCE`,`QUEUE_FILE_TRANSFER_DESTINATION`)
;

         DROP TABLE IF EXISTS BACKUP_HISTORIES;

-- Table BACKUP_HISTORIES

CREATE TABLE  IF NOT EXISTS `BACKUP_HISTORIES`
(
  `BACKUP_HISTORY_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `BACKUP_HISTORY_DATABASE_VERSION` Varchar(20) NOT NULL,
  `BACKUP_HISTORY_FILE` Varchar(255) NOT NULL,
  `BACKUP_HISTORY_COMMENT` Text,
  `BACKUP_HISTORY_CREATION_DATE` Datetime NOT NULL,
  `BACKUP_HISTORY_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`BACKUP_HISTORY_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

         DROP TABLE IF EXISTS TASKS;

-- Table TASKS

CREATE TABLE  IF NOT EXISTS `TASKS`
(
  `TASK_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `TASK_NAME` Varchar(50) NOT NULL,
  `TASK_TYPE` Smallint NOT NULL,
  `TASK_CONFIGURATION_FILE` Varchar(255) NOT NULL,
  `TASK_CREATION_DATE` Datetime NOT NULL,
  `TASK_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`TASK_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `TASKS` ADD UNIQUE `AK_TASKS_NAME` (`TASK_NAME`)
;

         DROP TABLE IF EXISTS QC_SHEET_TYPE;

-- Table QC_SHEET_TYPE

CREATE TABLE  IF NOT EXISTS `QC_SHEET_TYPE`
(
  `QC_SHEET_TYPE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `QC_SHEET_TYPE` Varchar(20) NOT NULL,
  `QC_SHEET_DESCRIPTION` Varchar(100),
  `QC_SHEET_DESCRIPTION_TRANSLATION_KEY` Varchar(30),
 PRIMARY KEY (`QC_SHEET_TYPE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

         DROP TABLE IF EXISTS EQUIPMENTS_ATTRIBUTES;

-- Table EQUIPMENTS_ATTRIBUTES

CREATE TABLE  IF NOT EXISTS `EQUIPMENTS_ATTRIBUTES`
(
  `EQUIPMENT_ATTRIBUTE_ATTRIBUTE_ID` Bigint UNSIGNED NOT NULL,
  `EQUIPMENT_ATTRIBUTE_EQUIPMENT_ID` Bigint UNSIGNED NOT NULL,
  `EQUIPMENT_ATTRIBUTE_VALUE` Varchar(255),
  `EQUIPMENT_ATTRIBUTE_CREATION_DATE` Datetime NOT NULL,
  `EQUIPMENT_ATTRIBUTE_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `EQUIPMENTS_ATTRIBUTES` ADD PRIMARY KEY (`EQUIPMENT_ATTRIBUTE_ATTRIBUTE_ID`,`EQUIPMENT_ATTRIBUTE_EQUIPMENT_ID`)
;

         DROP TABLE IF EXISTS ZONES;

-- Table ZONES

CREATE TABLE  IF NOT EXISTS `ZONES`
(
  `ZONE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `ZONE_STEAM_GENERATOR_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `ZONE_NAME` Varchar(30) NOT NULL,
  `ZONE_COLOR` Int NOT NULL,
  `ZONE_CREATION_DATE` Datetime NOT NULL,
  `ZONE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`ZONE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `ZONES` ADD UNIQUE `AK_ZONES_NAME` (`ZONE_NAME`,`ZONE_STEAM_GENERATOR_TYPE_ID`)
;

         DROP TABLE IF EXISTS EQUIPMENTS;

-- Table EQUIPMENTS

CREATE TABLE  IF NOT EXISTS `EQUIPMENTS`
(
  `EQUIPMENT_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `EQUIPMENT_EQUIPMENT_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `EQUIPMENT_CONDITION` Int NOT NULL,
  `EQUIPMENT_FME_STATUS` Smallint NOT NULL,
  `EQUIPMENT_STATE` Smallint NOT NULL,
  `EQUIPMENT_SERIAL_NUMBER` Varchar(30) NOT NULL,
  `EQUIPMENT_NAME` Varchar(30) NOT NULL,
  `EQUIPMENT_CONNECTION_STRING` Varchar(255),
  `EQUIPMENT_MODULE_CONNECTION_STRING` Varchar(255),
  `EQUIPMENT_VERSION` Varchar(50),
  `EQUIPMENT_IS_TEMPLATE` Tinyint(1) NOT NULL,
  `EQUIPMENT_CUSTOM_ATTRIBUTES_LAYOUT_FILE` Varchar(255),
  `EQUIPMENT_COMMENT` Text,
  `EQUIPMENT_CREATION_DATE` Datetime NOT NULL,
  `EQUIPMENT_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`EQUIPMENT_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `EQUIPMENTS` ADD UNIQUE `AK_EQUIPMENTS_SERIAL_NUMBER_EQUIPMENT_TYPE_ID` (`EQUIPMENT_SERIAL_NUMBER`,`EQUIPMENT_EQUIPMENT_TYPE_ID`)
;

         DROP TABLE IF EXISTS CONTROLS_TUBES;

-- Table CONTROLS_TUBES

CREATE TABLE  IF NOT EXISTS `CONTROLS_TUBES`
(
  `CONTROL_TUBE_TUBE_ID` Bigint UNSIGNED NOT NULL,
  `CONTROL_TUBE_CONTROL_ID` Bigint UNSIGNED NOT NULL,
  `CONTROL_TUBE_IS_TO_CONTROL` Tinyint(1) NOT NULL DEFAULT 0,
  `CONTROL_TUBE_IS_DONE` Tinyint(1) NOT NULL DEFAULT 0,
  `CONTROL_TUBE_IS_OBSTRUCTED_IN_HOT_LEG` Tinyint(1) NOT NULL DEFAULT 0,
  `CONTROL_TUBE_IS_OBSTRUCTED_IN_COLD_LEG` Tinyint(1) NOT NULL,
  `CONTROL_TUBE_IS_PLUGGED_IN_HOT_LEG` Tinyint(1) NOT NULL DEFAULT 0,
  `CONTROL_TUBE_IS_HIGH_PLUGGED_IN_HOT_LEG` Tinyint(1) NOT NULL,
  `CONTROL_TUBE_IS_PLUGGED_IN_COLD_LEG` Tinyint(1) NOT NULL DEFAULT 0,
  `CONTROL_TUBE_IS_HIGH_PLUGGED_IN_COLD_LEG` Tinyint(1) NOT NULL DEFAULT 0,
  `CONTROL_TUBE_HAS_INDICATIONS` Tinyint(1) NOT NULL,
  `CONTROL_TUBE_IS_CHARACTERISTIC` Tinyint(1) NOT NULL,
  `CONTROL_TUBE_IS_UNPLUGGED` Tinyint(1) NOT NULL,
  `CONTROL_TUBE_CREATION_DATE` Datetime NOT NULL,
  `CONTROL_TUBE_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `CONTROLS_TUBES` ADD PRIMARY KEY (`CONTROL_TUBE_TUBE_ID`,`CONTROL_TUBE_CONTROL_ID`)
;

         DROP TABLE IF EXISTS QC_SHEET_TYPES_CONFIGURATIONS;

-- Table QC_SHEET_TYPES_CONFIGURATIONS

CREATE TABLE  IF NOT EXISTS `QC_SHEET_TYPES_CONFIGURATIONS`
(
  `QC_SHEET_TYPES_CONFIGURATION_QC_SHEET_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `QC_SHEET_TYPES_CONFIGURATION_TECHNIQUE_ID` Bigint UNSIGNED NOT NULL
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `QC_SHEET_TYPES_CONFIGURATIONS` ADD PRIMARY KEY (`QC_SHEET_TYPES_CONFIGURATION_QC_SHEET_TYPE_ID`,`QC_SHEET_TYPES_CONFIGURATION_TECHNIQUE_ID`)
;

         DROP TABLE IF EXISTS USERS;

-- Table USERS

CREATE TABLE  IF NOT EXISTS `USERS`
(
  `USER_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `USER_CERTIFICATION_LEVEL` Smallint NOT NULL,
  `USER_LOGIN` Varchar(100) NOT NULL,
  `USER_HASH_PASSWORD` Varchar(255) NOT NULL,
  `USER_FIRST_NAME` Varchar(100) NOT NULL,
  `USER_LAST_NAME` Varchar(100) NOT NULL,
  `USER_COMPANY` Varchar(100),
  `USER_IMAGE` Blob,
  `USER_IS_ROOT` Tinyint(1) NOT NULL DEFAULT 0,
  `USER_CREATION_DATE` Datetime NOT NULL,
  `USER_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`USER_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `USERS` ADD UNIQUE `AK_USERS_LOGIN` (`USER_LOGIN`)
;

         DROP TABLE IF EXISTS MANWAYS;

-- Table MANWAYS

CREATE TABLE  IF NOT EXISTS `MANWAYS`
(
  `MANWAY_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `MANWAY_STEAM_GENERATOR_ID` Bigint UNSIGNED NOT NULL,
  `MANWAY_LEG_TYPE` Smallint NOT NULL,
  `MANWAY_DIAMETER` Double NOT NULL,
  `MANWAY_ROW` Int NOT NULL,
  `MANWAY_X` Float NOT NULL,
  `MANWAY_COLUMN` Int NOT NULL,
  `MANWAY_Y` Float NOT NULL,
  `MANWAY_CREATION_DATE` Datetime NOT NULL,
  `MANWAY_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`MANWAY_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `MANWAYS` ADD UNIQUE `AK_MANWAYS_STEAM_GENERATOR_ID_LEG_TYPE` (`MANWAY_STEAM_GENERATOR_ID`,`MANWAY_LEG_TYPE`)
;

         DROP TABLE IF EXISTS INSPECTIONS_ATTRIBUTES;

-- Table INSPECTIONS_ATTRIBUTES

CREATE TABLE  IF NOT EXISTS `INSPECTIONS_ATTRIBUTES`
(
  `INSPECTION_ATTRIBUTE_INSPECTION_ID` Bigint UNSIGNED NOT NULL,
  `INSPECTION_ATTRIBUTE_ATTRIBUTE_ID` Bigint UNSIGNED NOT NULL,
  `INSPECTION_ATTRIBUTE_VALUE` Varchar(255),
  `INSPECTION_ATTRIBUTE_CREATION_DATE` Datetime NOT NULL,
  `INSPECTION_ATTRIBUTE_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `INSPECTIONS_ATTRIBUTES` ADD PRIMARY KEY (`INSPECTION_ATTRIBUTE_INSPECTION_ID`,`INSPECTION_ATTRIBUTE_ATTRIBUTE_ID`)
;

         DROP TABLE IF EXISTS CONTROL_ZONES_TUBES;

-- Table CONTROL_ZONES_TUBES

CREATE TABLE  IF NOT EXISTS `CONTROL_ZONES_TUBES`
(
  `CONTROL_ZONE_TUBE_ZONE_ID` Bigint UNSIGNED NOT NULL,
  `CONTROL_ZONE_TUBE_TUBE_ID` Bigint UNSIGNED NOT NULL,
  `CONTROL_ZONE_TUBE_CREATION_DATE` Datetime NOT NULL
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `CONTROL_ZONES_TUBES` ADD PRIMARY KEY (`CONTROL_ZONE_TUBE_TUBE_ID`,`CONTROL_ZONE_TUBE_ZONE_ID`)
;

         DROP TABLE IF EXISTS TECHNIQUES_EQUIPMENT_TYPES;

-- Table TECHNIQUES_EQUIPMENT_TYPES

CREATE TABLE  IF NOT EXISTS `TECHNIQUES_EQUIPMENT_TYPES`
(
  `TET_TECHNIQUE_ID` Bigint UNSIGNED NOT NULL,
  `TET_EQUIPMENT_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `TET_EQUIPMENT_CONFIGURATION_ID` Bigint UNSIGNED,
  `TET_CREATION_DATE` Datetime NOT NULL,
  `TET_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `TECHNIQUES_EQUIPMENT_TYPES` ADD PRIMARY KEY (`TET_TECHNIQUE_ID`,`TET_EQUIPMENT_TYPE_ID`)
;

         DROP TABLE IF EXISTS SELECTED_EQUIPMENTS;

-- Table SELECTED_EQUIPMENTS

CREATE TABLE  IF NOT EXISTS `SELECTED_EQUIPMENTS`
(
  `SELECTED_EQUIPMENT_CONTROL_ID` Bigint UNSIGNED NOT NULL,
  `SELECTED_EQUIPMENT_EQUIPMENT_ID` Bigint UNSIGNED NOT NULL,
  `SELECTED_EQUIPMENT_ACQUISITION_LINE_ID` Bigint UNSIGNED,
  `SELECTED_EQUIPMENT_CREATION_DATE` Datetime NOT NULL,
  `SELECTED_EQUIPMENT_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `SELECTED_EQUIPMENTS` ADD PRIMARY KEY (`SELECTED_EQUIPMENT_CONTROL_ID`,`SELECTED_EQUIPMENT_EQUIPMENT_ID`)
;

         DROP TABLE IF EXISTS SELECTED_CONTROLS;

-- Table SELECTED_CONTROLS

CREATE TABLE  IF NOT EXISTS `SELECTED_CONTROLS`
(
  `SELECTED_CONTROL_INSPECTION_ID` Bigint UNSIGNED NOT NULL,
  `SELECTED_CONTROL_CONTROL_ID` Bigint UNSIGNED NOT NULL,
  `SELECTED_CONTROL_ACQUISITION_LINE_ID` Bigint UNSIGNED NOT NULL,
  `SELECTED_CONTROL_HOST` Varchar(20),
  `SELECTED_CONTROL_CREATION_DATE` Datetime NOT NULL,
  `SELECTED_CONTROL_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `SELECTED_CONTROLS` ADD PRIMARY KEY (`SELECTED_CONTROL_CONTROL_ID`,`SELECTED_CONTROL_INSPECTION_ID`,`SELECTED_CONTROL_ACQUISITION_LINE_ID`)
;

         DROP TABLE IF EXISTS SUPERVISOR_CLIENTS;

-- Table SUPERVISOR_CLIENTS

CREATE TABLE  IF NOT EXISTS `SUPERVISOR_CLIENTS`
(
  `SUPERVISOR_CLIENT_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `SUPERVISOR_CLIENT_MACHINE_NAME` Varchar(100) NOT NULL,
 PRIMARY KEY (`SUPERVISOR_CLIENT_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `SUPERVISOR_CLIENTS` ADD UNIQUE `AK_SUPERVISOR_CLIENTS_MACHINE_NAME` (`SUPERVISOR_CLIENT_MACHINE_NAME`)
;

         DROP TABLE IF EXISTS CONTROLS_ATTRIBUTES;

-- Table CONTROLS_ATTRIBUTES

CREATE TABLE  IF NOT EXISTS `CONTROLS_ATTRIBUTES`
(
  `CONTROL_ATTRIBUTE_CONTROL_ID` Bigint UNSIGNED NOT NULL,
  `CONTROL_ATTRIBUTE_ATTRIBUTE_ID` Bigint UNSIGNED NOT NULL,
  `CONTROL_ATTRIBUTE_VALUE` Varchar(255),
  `CONTROL_ATTRIBUTE_CREATION_DATE` Datetime NOT NULL,
  `CONTROL_ATTRIBUTE_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `CONTROLS_ATTRIBUTES` ADD PRIMARY KEY (`CONTROL_ATTRIBUTE_CONTROL_ID`,`CONTROL_ATTRIBUTE_ATTRIBUTE_ID`)
;

         DROP TABLE IF EXISTS ORGANS_ATTRIBUTES;

-- Table ORGANS_ATTRIBUTES

CREATE TABLE  IF NOT EXISTS `ORGANS_ATTRIBUTES`
(
  `ORGAN_ATTRIBUTE_ORGAN_ID` Bigint UNSIGNED NOT NULL,
  `ORGAN_ATTRIBUTE_ATTRIBUTE_ID` Bigint UNSIGNED NOT NULL,
  `ORGAN_ATTRIBUTE_VALUE` Varchar(255),
  `ORGAN_ATTRIBUTE_CREATION_DATE` Datetime NOT NULL,
  `ORGAN_ATTRIBUTE_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `ORGANS_ATTRIBUTES` ADD PRIMARY KEY (`ORGAN_ATTRIBUTE_ORGAN_ID`,`ORGAN_ATTRIBUTE_ATTRIBUTE_ID`)
;

         DROP TABLE IF EXISTS LAYOUTS;

-- Table LAYOUTS

CREATE TABLE  IF NOT EXISTS `LAYOUTS`
(
  `LAYOUT_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `LAYOUT_NAME` Varchar(50) NOT NULL,
  `LAYOUT_FILE` Varchar(255) NOT NULL,
  `LAYOUT_CREATION_DATE` Datetime NOT NULL,
  `LAYOUT_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`LAYOUT_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `LAYOUTS` ADD UNIQUE `AK_LAYOUTS_LAYOUT_NAME` (`LAYOUT_NAME`)
;

         DROP TABLE IF EXISTS EQUIPMENT_TRACKINGS_ATTRIBUTES;

-- Table EQUIPMENT_TRACKINGS_ATTRIBUTES

CREATE TABLE  IF NOT EXISTS `EQUIPMENT_TRACKINGS_ATTRIBUTES`
(
  `ETA_ATTRIBUTE_ID` Bigint UNSIGNED NOT NULL,
  `ETA_EQUIPMENT_TRACKING_ID` Bigint UNSIGNED NOT NULL,
  `ETA_VALUE` Varchar(255),
  `ETA_CREATION_DATE` Datetime NOT NULL,
  `ETA_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `EQUIPMENT_TRACKINGS_ATTRIBUTES` ADD PRIMARY KEY (`ETA_ATTRIBUTE_ID`,`ETA_EQUIPMENT_TRACKING_ID`)
;

         DROP TABLE IF EXISTS TUBES_ZONES;

-- Table TUBES_ZONES

CREATE TABLE  IF NOT EXISTS `TUBES_ZONES`
(
  `TUBE_ZONE_TUBE_ID` Bigint UNSIGNED NOT NULL,
  `TUBE_ZONE_ZONE_ID` Bigint UNSIGNED NOT NULL,
  `TUBE_ZONE_CREATION_DATE` Datetime NOT NULL
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `TUBES_ZONES` ADD PRIMARY KEY (`TUBE_ZONE_TUBE_ID`,`TUBE_ZONE_ZONE_ID`)
;

         DROP TABLE IF EXISTS UNIT_CONFIGURATIONS;

-- Table UNIT_CONFIGURATIONS

CREATE TABLE  IF NOT EXISTS `UNIT_CONFIGURATIONS`
(
  `UNIT_CONFIGURATION_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `UNIT_CONFIGURATION_NAME` Varchar(255) NOT NULL,
  `UNIT_CONFIGURATION_CREATION_DATE` Datetime NOT NULL,
  `UNIT_CONFIGURATION_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`UNIT_CONFIGURATION_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `UNIT_CONFIGURATIONS` ADD UNIQUE `AK_UNIT_CONFIGURATIONS_NAME` (`UNIT_CONFIGURATION_NAME`)
;

         DROP TABLE IF EXISTS UNITS_IN_UNIT_CONFIGURATIONS;

-- Table UNITS_IN_UNIT_CONFIGURATIONS

CREATE TABLE  IF NOT EXISTS `UNITS_IN_UNIT_CONFIGURATIONS`
(
  `UNIT_CONFIGURATION_ID` Bigint UNSIGNED NOT NULL,
  `UNIT_ID` Bigint UNSIGNED NOT NULL,
  `UNIT_DECIMALS` Int NOT NULL,
  `UNIT_DIMENSION` Smallint NOT NULL
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `UNITS_IN_UNIT_CONFIGURATIONS` ADD PRIMARY KEY (`UNIT_CONFIGURATION_ID`,`UNIT_ID`)
;

ALTER TABLE `UNITS_IN_UNIT_CONFIGURATIONS` ADD UNIQUE `AK_UNITS_IN_UNITS_CONFIGURATIONS` (`UNIT_CONFIGURATION_ID`,`UNIT_DIMENSION`)
;

         DROP TABLE IF EXISTS ACQUISITION_GROUPS_LINES;

-- Table ACQUISITION_GROUPS_LINES

CREATE TABLE  IF NOT EXISTS `ACQUISITION_GROUPS_LINES`
(
  `ACQUISITION_GROUP_ID` Bigint UNSIGNED NOT NULL,
  `ACQUISITION_LINE_ID` Bigint UNSIGNED NOT NULL
) ENGINE = InnoDB
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `ACQUISITION_GROUPS_LINES` ADD PRIMARY KEY (`ACQUISITION_GROUP_ID`,`ACQUISITION_LINE_ID`)
;

         DROP TABLE IF EXISTS TECHNIQUES_ATTRIBUTES;

-- Table TECHNIQUES_ATTRIBUTES

CREATE TABLE  IF NOT EXISTS `TECHNIQUES_ATTRIBUTES`
(
  `TECHNIQUE_ATTRIBUTE_ATTRIBUTE_ID` Bigint UNSIGNED NOT NULL,
  `TECHNIQUE_ATTRIBUTE_TECHNIQUE_ID` Bigint UNSIGNED NOT NULL,
  `TECHNIQUE_ATTRIBUTE_VALUE` Varchar(255),
  `TECHNIQUE_ATTRIBUTE_CREATION_DATE` Datetime NOT NULL,
  `TECHNIQUE_ATTRIBUTE_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `TECHNIQUES_ATTRIBUTES` ADD PRIMARY KEY (`TECHNIQUE_ATTRIBUTE_ATTRIBUTE_ID`,`TECHNIQUE_ATTRIBUTE_TECHNIQUE_ID`)
;

         DROP TABLE IF EXISTS FILES;

-- Table FILES

CREATE TABLE  IF NOT EXISTS `FILES`
(
  `FILE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `FILE_NAME` Varchar(255) NOT NULL,
  `FILE_TYPE` Smallint NOT NULL,
  `FILE_PATH` Varchar(255) NOT NULL,
  `FILE_VERSION` Varchar(10) NOT NULL,
  `FILE_CREATION_DATE` Datetime NOT NULL,
  `FILE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`FILE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `FILES` ADD UNIQUE `AK_FILES_NAME_PATH` (`FILE_PATH`,`FILE_NAME`)
;

         DROP TABLE IF EXISTS POK_ACTIONS;

-- Table POK_ACTIONS

CREATE TABLE  IF NOT EXISTS `POK_ACTIONS`
(
  `POK_ACTION_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `POK_ACTION_ACQUISITION_GROUP_ID` Bigint UNSIGNED NOT NULL,
  `POK_ACTION_TYPE_ID` Bigint UNSIGNED NOT NULL,
  `POK_ACTION_REASON_ID` Bigint UNSIGNED NOT NULL,
  `POK_ACTION_CREATION_DATE` Datetime NOT NULL,
  `POK_ACTION_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`POK_ACTION_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

         DROP TABLE IF EXISTS MESSAGES;

-- Table MESSAGES

CREATE TABLE  IF NOT EXISTS `MESSAGES`
(
  `MESSAGE_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `MESSAGE_ACQUISITION_GROUP_ID` Bigint UNSIGNED NOT NULL,
  `MESSAGE_ACQUISITION_ID` Bigint UNSIGNED,
  `MESSAGE_NAME` Varchar(255) NOT NULL,
  `MESSAGE_TEXT` Text NOT NULL,
  `MESSAGE_USER_NAME` Varchar(200),
  `MESSAGE_CREATION_DATE` Datetime NOT NULL,
  `MESSAGE_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`MESSAGE_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

         DROP TABLE IF EXISTS CONFIGURATIONS;

-- Table CONFIGURATIONS

CREATE TABLE  IF NOT EXISTS `CONFIGURATIONS`
(
  `CONFIGURATION_ID` Bigint NOT NULL AUTO_INCREMENT,
  `CONFIGURATION_NAME` Varchar(255) NOT NULL,
  `CONFIGURATION_IS_ACTIVE` Tinyint(0) NOT NULL DEFAULT 0,
  `CONFIGURATION_CREATION_DATE` Datetime NOT NULL,
  `CONFIGURATION_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`CONFIGURATION_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `CONFIGURATIONS` ADD UNIQUE `AK_CONFIGURATIONS_NAME` (`CONFIGURATION_NAME`)
;

         DROP TABLE IF EXISTS CONFIGURATIONS_ACTIONS;

-- Table CONFIGURATIONS_ACTIONS

CREATE TABLE  IF NOT EXISTS `CONFIGURATIONS_ACTIONS`
(
  `CONFIGURATION_ACTION_ACTION_ID` Bigint UNSIGNED NOT NULL,
  `CONFIGURATION_ACTION_CONFIGURATION_ID` Bigint NOT NULL,
  `CONFIGURATION_ACTION_FILE_ID` Bigint UNSIGNED
) ENGINE = InnoDB
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `CONFIGURATIONS_ACTIONS` ADD PRIMARY KEY (`CONFIGURATION_ACTION_ACTION_ID`,`CONFIGURATION_ACTION_CONFIGURATION_ID`)
;

         DROP TABLE IF EXISTS ACTORS;

-- Table ACTORS

CREATE TABLE  IF NOT EXISTS `ACTORS`
(
  `ACTOR_ID` Bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `ACTOR_TYPE` Smallint NOT NULL,
  `ACTOR_NAME` Varchar(50) NOT NULL,
  `ACTOR_LOCATION` Varchar(255),
  `ACTOR_LOGO` Blob,
  `ACTOR_PHONE_NUMBER` Varchar(50),
  `ACTOR_CREATION_DATE` Datetime NOT NULL,
  `ACTOR_MODIFICATION_DATE` Datetime,
 PRIMARY KEY (`ACTOR_ID`)
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `ACTORS` ADD UNIQUE `AK_ACTORS` (`ACTOR_NAME`)
;

         DROP TABLE IF EXISTS EXAMS_ATTRIBUTES;

-- Table EXAMS_ATTRIBUTES

CREATE TABLE  IF NOT EXISTS `EXAMS_ATTRIBUTES`
(
  `EXAM_ATTRIBUTE_ATTRIBUTE_ID` Bigint UNSIGNED NOT NULL,
  `EXAM_ATTRIBUTE_EXAM_ID` Bigint UNSIGNED NOT NULL,
  `EXAM_ATTRIBUTE_VALUE` Varchar(255),
  `EXAM_ATTRIBUTE_CREATION_DATE` Datetime NOT NULL,
  `EXAM_ATTRIBUTE_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `EXAMS_ATTRIBUTES` ADD PRIMARY KEY (`EXAM_ATTRIBUTE_ATTRIBUTE_ID`,`EXAM_ATTRIBUTE_EXAM_ID`)
;

-- Table SG_GEOMETRIC_ZONES

CREATE TABLE  IF NOT EXISTS `SG_GEOMETRIC_ZONES`
(
  `SG_GEOMETRIC_ZONE_ID` Bigint UNSIGNED NOT NULL,
  `SG_GEOMETRIC_ZONE_STEAM_GENERATOR_ID` Bigint UNSIGNED NOT NULL,
  `SG_GEOMETRIC_ZONE_CREATION_DATE` Datetime NOT NULL,
  `SG_GEOMETRIC_ZONE_MODIFICATION_DATE` Datetime
) ENGINE = InnoDB
  AUTO_INCREMENT = 1
  DEFAULT CHARACTER SET utf8
;

ALTER TABLE `SG_GEOMETRIC_ZONES` ADD PRIMARY KEY (`SG_GEOMETRIC_ZONE_ID`,`SG_GEOMETRIC_ZONE_STEAM_GENERATOR_ID`)
;

-- Create relationships section ------------------------------------------------- 

ALTER TABLE `TEXTS` ADD CONSTRAINT `FK_COMPONENTS_TEXTS_TEXT_COMPONENT_ID` FOREIGN KEY (`TEXT_COMPONENT_ID`) REFERENCES `COMPONENTS` (`COMPONENT_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `TEXTS` ADD CONSTRAINT `FK_LANGUAGES_TEXTS_TEXT_LANGUAGE_ID` FOREIGN KEY (`TEXT_LANGUAGE_ID`) REFERENCES `LANGUAGES` (`LANGUAGE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `CONVERSIONS` ADD CONSTRAINT `FK_UNITS_CONVERSIONS_UNIT_SOURCE_ID` FOREIGN KEY (`CONVERSION_UNIT_SOURCE_ID`) REFERENCES `UNITS` (`UNIT_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `CONVERSIONS` ADD CONSTRAINT `FK_UNITS_CONVERSIONS_UNIT_DEST_ID` FOREIGN KEY (`CONVERSION_UNIT_DEST_ID`) REFERENCES `UNITS` (`UNIT_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `USERS_ROLES` ADD CONSTRAINT `FK_ROLES_USERS_ROLES` FOREIGN KEY (`ROLE_ID`) REFERENCES `ROLES` (`ROLE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `APPLICATION_FUNCTIONALITIES_ROLES` ADD CONSTRAINT `FK_APPLICATION_FUNCTIONALITIES_APPLICATION_FUNCTIONALITIES_ROLES` FOREIGN KEY (`AFR_APPLICATION_FUNCTIONALITY_ID`) REFERENCES `APPLICATION_FUNCTIONALITIES` (`APPLICATION_FUNCTIONALITY_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `APPLICATION_FUNCTIONALITIES_ROLES` ADD CONSTRAINT `FK_ROLES_APPLICATION_FUNCTIONALITIES_ROLES` FOREIGN KEY (`AFR_ROLE_ID`) REFERENCES `ROLES` (`ROLE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `TUBES` ADD CONSTRAINT `FK_STEAM_GENERATOR_TYPES_TUBES` FOREIGN KEY (`TUBE_STEAM_GENERATOR_TYPE_ID`) REFERENCES `STEAM_GENERATOR_TYPES` (`STEAM_GENERATOR_TYPE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `GEOMETRIC_ZONES` ADD CONSTRAINT `FK_STEAM_GENERATOR_TYPES_GEOMETRIC_ZONES` FOREIGN KEY (`GEOMETRIC_ZONE_STEAM_GENERATOR_TYPE_ID`) REFERENCES `STEAM_GENERATOR_TYPES` (`STEAM_GENERATOR_TYPE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `TUBES_GEOMETRIC_ZONES` ADD CONSTRAINT `FK_TUBES_TUBE_GEOMETRIC_ZONES` FOREIGN KEY (`TUBES_GEOMETRIC_ZONE_TUBE_ID`) REFERENCES `TUBES` (`TUBE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `TUBES_GEOMETRIC_ZONES` ADD CONSTRAINT `FK_GEOMETRIC_ZONES_TUBE_GEOMETRIC_ZONES` FOREIGN KEY (`TUBES_GEOMETRIC_ZONE_GEOMETRIC_ZONE_ID`) REFERENCES `GEOMETRIC_ZONES` (`GEOMETRIC_ZONE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_TYPES_ATTRIBUTES` ADD CONSTRAINT `FK_EQUIPMENT_TYPES_EQUIPMENT_TYPES_ATTRIBUTES` FOREIGN KEY (`ETA_EQUIPMENT_TYPE_ID`) REFERENCES `EQUIPMENT_TYPES` (`EQUIPMENT_TYPE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_TYPES_ATTRIBUTES` ADD CONSTRAINT `FK_ATTRIBUTES_EQUIPMENT_TYPES_ATTRIBUTES` FOREIGN KEY (`ETA_ATTRIBUTE_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `STEAM_GENERATORS` ADD CONSTRAINT `FK_ORGANS_STEAM_GENERATORS` FOREIGN KEY (`STEAM_GENERATOR_ID`) REFERENCES `ORGANS` (`ORGAN_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `ORGANS` ADD CONSTRAINT `FK_ORGANS_SITES` FOREIGN KEY (`ORGAN_SITE_ID`) REFERENCES `SITES` (`SITE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `STEAM_GENERATORS` ADD CONSTRAINT `FK_STEAM_GENERATOR_TYPES_STEAM_GENERATORS` FOREIGN KEY (`STEAM_GENERATOR_STEAM_GENERATOR_TYPE_ID`) REFERENCES `STEAM_GENERATOR_TYPES` (`STEAM_GENERATOR_TYPE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `SG_TUBES_GEOMETRIC_ZONES` ADD CONSTRAINT `FK_STEAM_GENERATORS_SG_TUBE_ZONES` FOREIGN KEY (`SG_TUBES_GEOMETRIC_ZONE_STEAM_GENERATOR_ID`) REFERENCES `STEAM_GENERATORS` (`STEAM_GENERATOR_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `NUCLEAR_PLANT_UNITS` ADD CONSTRAINT `FK_SITES_NUCLEAR_PLANT_UNITS` FOREIGN KEY (`NUCLEAR_PLANT_UNIT_SITE_ID`) REFERENCES `SITES` (`SITE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `SG_TUBES` ADD CONSTRAINT `FK_STEAM_GENERATORS_SG_TUBES` FOREIGN KEY (`SG_TUBE_STEAM_GENERATOR_ID`) REFERENCES `STEAM_GENERATORS` (`STEAM_GENERATOR_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `SG_TUBES` ADD CONSTRAINT `FK_TUBES_SG_TUBES` FOREIGN KEY (`SG_TUBE_TUBE_ID`) REFERENCES `TUBES` (`TUBE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `SG_TUBES_GEOMETRIC_ZONES` ADD CONSTRAINT `FK_TUBE_GEOMETRIC_ZONES_SG_TUBE_ZONES` FOREIGN KEY (`SG_TUBES_GEOMETRIC_ZONE_ID`) REFERENCES `TUBES_GEOMETRIC_ZONES` (`TUBES_GEOMETRIC_ZONE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `INSPECTIONS` ADD CONSTRAINT `FK_NUCLEAR_PLANT_UNITS_INSPECTIONS` FOREIGN KEY (`INSPECTION_NUCLEAR_PLANT_UNIT_ID`) REFERENCES `NUCLEAR_PLANT_UNITS` (`NUCLEAR_PLANT_UNIT_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONTROLS` ADD CONSTRAINT `FK_INSPECTIONS_CONTROLS` FOREIGN KEY (`CONTROL_INSPECTION_ID`) REFERENCES `INSPECTIONS` (`INSPECTION_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONTROLS` ADD CONSTRAINT `FK_ORGANS_CONTROLS` FOREIGN KEY (`CONTROL_ORGAN_ID`) REFERENCES `ORGANS` (`ORGAN_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONTROLS` ADD CONSTRAINT `FK_TECHNIQUES_CONTROLS` FOREIGN KEY (`CONTROL_TECHNIQUE_ID`) REFERENCES `TECHNIQUES` (`TECHNIQUE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `QUALITY_CHECK_RESULT_VALUES` ADD CONSTRAINT `FK_QC_RESULTS_QC_RESULT_VALUES` FOREIGN KEY (`QUALITY_CHECK_RESULT_VALUE_QUALITY_CHECK_RESULT_ID`) REFERENCES `QUALITY_CHECK_RESULTS` (`QUALITY_CHECK_RESULT_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `QUALITY_CHECK_RESULT_VALUES` ADD CONSTRAINT `FK_UNITS_QC_RESULT_VALUES` FOREIGN KEY (`QUALITY_CHECK_RESULT_VALUE_UNIT_ID`) REFERENCES `UNITS` (`UNIT_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ACQUISITION_FILES` ADD CONSTRAINT `FK_ACQUISITIONS_ACQUISITION_FILES` FOREIGN KEY (`ACQUISITION_FILE_ACQUISITION_ID`) REFERENCES `ACQUISITIONS` (`ACQUISITION_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONTROLS` ADD CONSTRAINT `FK_SECTORS_STEAM_GENERATOR_CONTROLS` FOREIGN KEY (`CONTROL_SECTOR_ID`) REFERENCES `SECTORS` (`SECTOR_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EXAMS` ADD CONSTRAINT `FK_CONTROLS_EXAMS` FOREIGN KEY (`EXAM_CONTROL_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ACQUISITIONS` ADD CONSTRAINT `FK_ACQUISITIONS_ACQUISITIONS_PARENT` FOREIGN KEY (`ACQUISITION_PARENT_ID`) REFERENCES `ACQUISITIONS` (`ACQUISITION_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `ACQUISITIONS_EQUIPMENTS` ADD CONSTRAINT `FK_ACQUISITIONS_ACQUISITIONS_EQUIPMENTS` FOREIGN KEY (`ACQUISITION_EQUIPMENT_ACQUISITION_ID`) REFERENCES `ACQUISITIONS` (`ACQUISITION_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `ACQUISITION_GROUPS` ADD CONSTRAINT `FK_CONTROLS_ACQUISITION_GROUPS` FOREIGN KEY (`ACQUISITION_GROUP_CONTROL_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONTROL_ZONES` ADD CONSTRAINT `FK_TECHNIQUES_CONTROL_ZONES` FOREIGN KEY (`CONTROL_ZONE_TECHNIQUE_ID`) REFERENCES `TECHNIQUES` (`TECHNIQUE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONTROL_ZONES` ADD CONSTRAINT `FK_CONTROLS_CONTROL_ZONES` FOREIGN KEY (`CONTROL_ZONE_CONTROL_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `TECHNIQUES` ADD CONSTRAINT `FK_TECHNIQUES_TECHNIQUE_PARENT_ID` FOREIGN KEY (`TECHNIQUE_PARENT_ID`) REFERENCES `TECHNIQUES` (`TECHNIQUE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `ATTRIBUTES` ADD CONSTRAINT `FK_UNITS_ATTRIBUTES` FOREIGN KEY (`ATTRIBUTE_UNIT_ID`) REFERENCES `UNITS` (`UNIT_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENTS_ATTRIBUTES` ADD CONSTRAINT `FK_ATTRIBUTES_EQUIPMENTS_ATTRIBUTES` FOREIGN KEY (`EQUIPMENT_ATTRIBUTE_ATTRIBUTE_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ATTRIBUTES` ADD CONSTRAINT `FK_ATTRIBUTES_ATTRIBUTES_PARENT_ID` FOREIGN KEY (`ATTRIBUTE_PARENT_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_TYPES` ADD CONSTRAINT `FK_ATTRIBUTES_EQUIPMENTS_TYPES_CATEGORY_ID` FOREIGN KEY (`EQUIPMENT_TYPE_CATEGORY_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ZONES` ADD CONSTRAINT `FK_STEAM_GENERATORS_TYPES_ZONES` FOREIGN KEY (`ZONE_STEAM_GENERATOR_TYPE_ID`) REFERENCES `STEAM_GENERATOR_TYPES` (`STEAM_GENERATOR_TYPE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `SECTORS` ADD CONSTRAINT `FK_STEAM_GENERATOR_TYPES_SECTORS` FOREIGN KEY (`SECTOR_STEAM_GENERATOR_TYPE_ID`) REFERENCES `STEAM_GENERATOR_TYPES` (`STEAM_GENERATOR_TYPE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `TUBES` ADD CONSTRAINT `FK_SECTORS_TUBES_TUBE_SECTOR_ID` FOREIGN KEY (`TUBE_SECTOR_ID`) REFERENCES `SECTORS` (`SECTOR_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ORGANS` ADD CONSTRAINT `FK_NUCLEAR_PLANT_UNITS_ORGANS` FOREIGN KEY (`ORGAN_NUCLEAR_PLANT_UNIT_ID`) REFERENCES `NUCLEAR_PLANT_UNITS` (`NUCLEAR_PLANT_UNIT_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `TEXTS` ADD CONSTRAINT `FK_ATTRIBUTES_TEXTS_TEXT_GROUP_ID` FOREIGN KEY (`TEXT_GROUP_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EXAMS` ADD CONSTRAINT `FK_TUBES_GEOMETRIC_ZONES_EXAMS_BEGIN_ZONE` FOREIGN KEY (`EXAM_BEGIN_ZONE_ID`) REFERENCES `TUBES_GEOMETRIC_ZONES` (`TUBES_GEOMETRIC_ZONE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EXAMS` ADD CONSTRAINT `FK_TUBES_GEOMETRIC_ZONES_EXAMS_END_ZONE` FOREIGN KEY (`EXAM_END_ZONE_ID`) REFERENCES `TUBES_GEOMETRIC_ZONES` (`TUBES_GEOMETRIC_ZONE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENTS` ADD CONSTRAINT `FK_EQTS_EQUIPMENTS_EQUIPMENT_EQUIPMENT_TYPE_ID` FOREIGN KEY (`EQUIPMENT_EQUIPMENT_TYPE_ID`) REFERENCES `EQUIPMENT_TYPES` (`EQUIPMENT_TYPE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_TRACKINGS` ADD CONSTRAINT `FK_EQUIPMENTS_EQUIPMENT_TRACKINGS` FOREIGN KEY (`EQUIPMENT_TRACKING_EQUIPMENT_ID`) REFERENCES `EQUIPMENTS` (`EQUIPMENT_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENTS_ATTRIBUTES` ADD CONSTRAINT `FK_EQUIPMENTS_EQUIPMENTS_ATTRIBUTES` FOREIGN KEY (`EQUIPMENT_ATTRIBUTE_EQUIPMENT_ID`) REFERENCES `EQUIPMENTS` (`EQUIPMENT_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `ACQUISITIONS_EQUIPMENTS` ADD CONSTRAINT `FK_EQUIPMENTS_ACQUISITIONS_EQUIPMENTS` FOREIGN KEY (`ACQUISITION_EQUIPMENT_EQUIPMENT_ID`) REFERENCES `EQUIPMENTS` (`EQUIPMENT_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONTROLS_TUBES` ADD CONSTRAINT `FK_TUBES_CONTROLS_TUBES` FOREIGN KEY (`CONTROL_TUBE_TUBE_ID`) REFERENCES `TUBES` (`TUBE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `CONTROLS_TUBES` ADD CONSTRAINT `FK_CONTROLS_CONTROLS_TUBES` FOREIGN KEY (`CONTROL_TUBE_CONTROL_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `IOS` ADD CONSTRAINT `FK_EQUIPMENT_TYPES_IOS` FOREIGN KEY (`IO_EQUIPMENT_TYPE_ID`) REFERENCES `EQUIPMENT_TYPES` (`EQUIPMENT_TYPE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `QC_SHEET_TYPES_CONFIGURATIONS` ADD CONSTRAINT `FK_QC_SHEET_TYPE_QC_SHEET_TYPES_CONFIGURATIONS` FOREIGN KEY (`QC_SHEET_TYPES_CONFIGURATION_QC_SHEET_TYPE_ID`) REFERENCES `QC_SHEET_TYPE` (`QC_SHEET_TYPE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `QC_SHEET_TYPES_CONFIGURATIONS` ADD CONSTRAINT `FK_TECHNIQUES_QC_SHEET_TYPES_CONFIGURATIONS` FOREIGN KEY (`QC_SHEET_TYPES_CONFIGURATION_TECHNIQUE_ID`) REFERENCES `TECHNIQUES` (`TECHNIQUE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `USERS_ROLES` ADD CONSTRAINT `FK_USERS_USERS_ROLES` FOREIGN KEY (`USER_ID`) REFERENCES `USERS` (`USER_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `IOS` ADD CONSTRAINT `FK_UNITS_IOS` FOREIGN KEY (`IO_UNIT_ID`) REFERENCES `UNITS` (`UNIT_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ACQUISITIONS` ADD CONSTRAINT `FK_EXAMS_ACQUISITIONS` FOREIGN KEY (`ACQUISITION_EXAM_ID`) REFERENCES `EXAMS` (`EXAM_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `INSPECTIONS_ATTRIBUTES` ADD CONSTRAINT `FK_INSPECTION_ATTRIBUTES_INSPECTIONS` FOREIGN KEY (`INSPECTION_ATTRIBUTE_INSPECTION_ID`) REFERENCES `INSPECTIONS` (`INSPECTION_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `INSPECTIONS_ATTRIBUTES` ADD CONSTRAINT `FK_ATTRIBUTES_INSPECTION_ATTRIBUTES` FOREIGN KEY (`INSPECTION_ATTRIBUTE_ATTRIBUTE_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `MANWAYS` ADD CONSTRAINT `FK_STEAM_GENERATORS_MANWAYS` FOREIGN KEY (`MANWAY_STEAM_GENERATOR_ID`) REFERENCES `STEAM_GENERATORS` (`STEAM_GENERATOR_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_TRACKINGS` ADD CONSTRAINT `FK_USERS_EQUIPMENT_TRACKINGS` FOREIGN KEY (`EQUIPMENT_TRACKING_USER_ID`) REFERENCES `USERS` (`USER_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_TRACKINGS` ADD CONSTRAINT `FK_CONTROLS_EQUIPMENT_TRACKINGS` FOREIGN KEY (`EQUIPMENT_TRACKING_CONTROL_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `INSPECTIONS` ADD CONSTRAINT `FK_SITES_INSPECTIONS` FOREIGN KEY (`INSPECTION_SITE_ID`) REFERENCES `SITES` (`SITE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ACQUISITIONS` ADD CONSTRAINT `FK_ACQUISITIONS_AQUISITION_CHILD` FOREIGN KEY (`ACQUISITION_CHILD_ID`) REFERENCES `ACQUISITIONS` (`ACQUISITION_ID`) ON DELETE SET NULL ON UPDATE NO ACTION
;

ALTER TABLE `CONTROL_ZONES_TUBES` ADD CONSTRAINT `FK_TUBES_CONTROL_ZONES_TUBES` FOREIGN KEY (`CONTROL_ZONE_TUBE_TUBE_ID`) REFERENCES `TUBES` (`TUBE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `CONTROL_ZONES_TUBES` ADD CONSTRAINT `FK_CONTROL_ZONES_CONTROL_ZONES_TUBES` FOREIGN KEY (`CONTROL_ZONE_TUBE_ZONE_ID`) REFERENCES `CONTROL_ZONES` (`CONTROL_ZONE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `TECHNIQUES_EQUIPMENT_TYPES` ADD CONSTRAINT `FK_TECHNIQUES_TECHNIQUES_EQUIPMENT_TYPES` FOREIGN KEY (`TET_TECHNIQUE_ID`) REFERENCES `TECHNIQUES` (`TECHNIQUE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `TECHNIQUES_EQUIPMENT_TYPES` ADD CONSTRAINT `FK_EQUIPMENT_TYPES_TECHNIQUES_EQUIPMENT_TYPES` FOREIGN KEY (`TET_EQUIPMENT_TYPE_ID`) REFERENCES `EQUIPMENT_TYPES` (`EQUIPMENT_TYPE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `SELECTED_EQUIPMENTS` ADD CONSTRAINT `FK_CONTROLS_SELECTED_EQUIPMENTS` FOREIGN KEY (`SELECTED_EQUIPMENT_CONTROL_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `SELECTED_EQUIPMENTS` ADD CONSTRAINT `FK_EQUIPMENTS_SELECTED_EQUIPMENTS` FOREIGN KEY (`SELECTED_EQUIPMENT_EQUIPMENT_ID`) REFERENCES `EQUIPMENTS` (`EQUIPMENT_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `SELECTED_CONTROLS` ADD CONSTRAINT `FK_CONTROLS_SELECTED_CONTROLS` FOREIGN KEY (`SELECTED_CONTROL_CONTROL_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `SELECTED_CONTROLS` ADD CONSTRAINT `FK_INSPECTIONS_SELECTED_CONTROLS` FOREIGN KEY (`SELECTED_CONTROL_INSPECTION_ID`) REFERENCES `INSPECTIONS` (`INSPECTION_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_CONFIGURATIONS` ADD CONSTRAINT `FK_CONTROLS_CONFIGURATIONS` FOREIGN KEY (`EQUIPMENT_CONFIGURATION_CONTROL_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONTROLS_ATTRIBUTES` ADD CONSTRAINT `FK_CONTROLS_CONTROL_ATTRIBUTES` FOREIGN KEY (`CONTROL_ATTRIBUTE_CONTROL_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `CONTROLS_ATTRIBUTES` ADD CONSTRAINT `FK_ATTRIBUTES_CONTROL_ATTRIBUTES` FOREIGN KEY (`CONTROL_ATTRIBUTE_ATTRIBUTE_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ORGANS_ATTRIBUTES` ADD CONSTRAINT `FK_ORGANS_ORGANS_ATTRIBUTES` FOREIGN KEY (`ORGAN_ATTRIBUTE_ORGAN_ID`) REFERENCES `ORGANS` (`ORGAN_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ORGANS_ATTRIBUTES` ADD CONSTRAINT `FK_ATTRIBUTES_ORGANS_ATTRIBUTES` FOREIGN KEY (`ORGAN_ATTRIBUTE_ATTRIBUTE_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `QUEUE_FILES_TRANSFER` ADD CONSTRAINT `FK_CONTROLS_QUEUE_FILES_TRANSFER` FOREIGN KEY (`QUEUE_FILE_TRANSFER_CONTROL_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `COMPONENTS` ADD CONSTRAINT `FK_COMPONENTS_PARENT_ID` FOREIGN KEY (`COMPONENT_PARENT_ID`) REFERENCES `COMPONENTS` (`COMPONENT_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_TYPES` ADD CONSTRAINT `FK_COMPONENTS_EQUIPMENT_TYPES` FOREIGN KEY (`EQUIPMENT_TYPE_COMPONENT_ID`) REFERENCES `COMPONENTS` (`COMPONENT_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `STEAM_GENERATOR_TYPES` ADD CONSTRAINT `FK_ATTRIBUTES_STEAM_GENERATOR_TYPES_MATERIAL_ID` FOREIGN KEY (`STEAM_GENERATOR_TYPE_TUBE_MATERIAL_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_TRACKINGS_ATTRIBUTES` ADD CONSTRAINT `FK_EQUIPMENT_TRACKINGS_EQUIPMENT_TRACKINGS_ATTRIBUTES` FOREIGN KEY (`ETA_EQUIPMENT_TRACKING_ID`) REFERENCES `EQUIPMENT_TRACKINGS` (`EQUIPMENT_TRACKING_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_TRACKINGS_ATTRIBUTES` ADD CONSTRAINT `FK_ATTRIBUTES_EQUIPMENT_TRACKINGS_ATTRIBUTES` FOREIGN KEY (`ETA_ATTRIBUTE_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `TUBES_ZONES` ADD CONSTRAINT `FK_TUBES_TUBES_ZONES_TUBE_ID` FOREIGN KEY (`TUBE_ZONE_TUBE_ID`) REFERENCES `TUBES` (`TUBE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `TUBES_ZONES` ADD CONSTRAINT `FK_ZONES_TUBES_ZONES_ZONE_ID` FOREIGN KEY (`TUBE_ZONE_ZONE_ID`) REFERENCES `ZONES` (`ZONE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `ACQUISITIONS` ADD CONSTRAINT `FK_ACQUISITION_GROUPS_ACQUISITIONS` FOREIGN KEY (`ACQUISITION_ACQUISITION_GROUP_ID`) REFERENCES `ACQUISITION_GROUPS` (`ACQUISITION_GROUP_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `UNITS_IN_UNIT_CONFIGURATIONS` ADD CONSTRAINT `FK_UNIT_CONFIGURATIONS_UNITS_IN_UNIT_CONFIGURATIONS` FOREIGN KEY (`UNIT_CONFIGURATION_ID`) REFERENCES `UNIT_CONFIGURATIONS` (`UNIT_CONFIGURATION_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `UNITS_IN_UNIT_CONFIGURATIONS` ADD CONSTRAINT `FK_UNITS_UNITS_IN_UNIT_CONFIGURATIONS` FOREIGN KEY (`UNIT_ID`) REFERENCES `UNITS` (`UNIT_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `INSPECTIONS` ADD CONSTRAINT `FK_UNIT_CONFIGURATIONS_INSPECTIONS` FOREIGN KEY (`INSPECTION_UNIT_CONFIGURATION_ID`) REFERENCES `UNIT_CONFIGURATIONS` (`UNIT_CONFIGURATION_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `ACQUISITION_GROUPS_LINES` ADD CONSTRAINT `FK_ACQUISITION_GROUPS_ACQUISITION_GROUPS_LINES` FOREIGN KEY (`ACQUISITION_GROUP_ID`) REFERENCES `ACQUISITION_GROUPS` (`ACQUISITION_GROUP_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ACQUISITION_GROUPS_LINES` ADD CONSTRAINT `FK_ACQUISITION_LINES_ACQUISITION_GROUPS_LINES` FOREIGN KEY (`ACQUISITION_LINE_ID`) REFERENCES `ACQUISITION_LINES` (`ACQUISITION_LINE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `TECHNIQUES_ATTRIBUTES` ADD CONSTRAINT `FK_ATTRIBUTES_TECHNIQUES_ATTRIBUTES` FOREIGN KEY (`TECHNIQUE_ATTRIBUTE_ATTRIBUTE_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `TECHNIQUES_ATTRIBUTES` ADD CONSTRAINT `FK_TECHNIQUES_TECHNIQUES_ATTRIBUTES` FOREIGN KEY (`TECHNIQUE_ATTRIBUTE_TECHNIQUE_ID`) REFERENCES `TECHNIQUES` (`TECHNIQUE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_CONFIGURATIONS` ADD CONSTRAINT `FK_FILES_EQUIPMENT_CONFIGURATIONS` FOREIGN KEY (`EQUIPMENT_CONFIGURATION_ID`) REFERENCES `FILES` (`FILE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `POK_ACTIONS` ADD CONSTRAINT `FK_ACQUISITION_GROUPS_POK_ACTIONS` FOREIGN KEY (`POK_ACTION_ACQUISITION_GROUP_ID`) REFERENCES `ACQUISITION_GROUPS` (`ACQUISITION_GROUP_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `POK_ACTIONS` ADD CONSTRAINT `FK_ATTRIBUTES_POK_ACTIONS_POK_TYPE_ID` FOREIGN KEY (`POK_ACTION_TYPE_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `POK_ACTIONS` ADD CONSTRAINT `FK_ATTRIBUTES_POK_ACTIONS_POK_REASON_ID` FOREIGN KEY (`POK_ACTION_REASON_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `MESSAGES` ADD CONSTRAINT `FK_ACQUISITION_GROUPS_MESSAGES` FOREIGN KEY (`MESSAGE_ACQUISITION_GROUP_ID`) REFERENCES `ACQUISITION_GROUPS` (`ACQUISITION_GROUP_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `MESSAGES` ADD CONSTRAINT `FK_ACQUISITIONS_MESSAGES` FOREIGN KEY (`MESSAGE_ACQUISITION_ID`) REFERENCES `ACQUISITIONS` (`ACQUISITION_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `TECHNIQUES_EQUIPMENT_TYPES` ADD CONSTRAINT `FK_EQUIPMENT_CONFIGURATIONS_EQUIPMENT_TYPES_TECHNIQUES` FOREIGN KEY (`TET_EQUIPMENT_CONFIGURATION_ID`) REFERENCES `EQUIPMENT_CONFIGURATIONS` (`EQUIPMENT_CONFIGURATION_ID`) ON DELETE SET NULL ON UPDATE NO ACTION
;

ALTER TABLE `EVENTS` ADD CONSTRAINT `FK_CONTROLS_EVENTS` FOREIGN KEY (`EVENT_CONTROL_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EVENTS` ADD CONSTRAINT `FK_ACQUISITION_GROUPS_EVENTS` FOREIGN KEY (`EVENT_ACQUISITION_GROUP_ID`) REFERENCES `ACQUISITION_GROUPS` (`ACQUISITION_GROUP_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONFIGURATIONS_ACTIONS` ADD CONSTRAINT `FK_ATTRIBUTES_ACTIONS_CONFIGURATIONS` FOREIGN KEY (`CONFIGURATION_ACTION_ACTION_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONFIGURATIONS_ACTIONS` ADD CONSTRAINT `FK_CONFIGURATIONS_ACTIONS_CONFIGURATIONS` FOREIGN KEY (`CONFIGURATION_ACTION_CONFIGURATION_ID`) REFERENCES `CONFIGURATIONS` (`CONFIGURATION_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONFIGURATIONS_ACTIONS` ADD CONSTRAINT `FK_FILES_ACTIONS_CONFIGURATIONS` FOREIGN KEY (`CONFIGURATION_ACTION_FILE_ID`) REFERENCES `FILES` (`FILE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONTROLS` ADD CONSTRAINT `FK_CONTROLS_CONTROL_LINKED_ID` FOREIGN KEY (`CONTROL_LINKED_ID`) REFERENCES `CONTROLS` (`CONTROL_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `QUALITY_CHECK_RESULTS` ADD CONSTRAINT `FK_ACQUISITIONS_QC_RESULTS` FOREIGN KEY (`QUALITY_CHECK_RESULT_ACQUISITION_FILE_ID`) REFERENCES `ACQUISITION_FILES` (`ACQUISITION_FILE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EXAMS` ADD CONSTRAINT `FK_TUBES_EXAMS` FOREIGN KEY (`EXAM_TUBE_ID`) REFERENCES `TUBES` (`TUBE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONTROLS` ADD CONSTRAINT `FK_GEOMETRIC_ZONES_CONTROLS_BEGIN_ZONE_ID` FOREIGN KEY (`CONTROL_BEGIN_ZONE_ID`) REFERENCES `GEOMETRIC_ZONES` (`GEOMETRIC_ZONE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `CONTROLS` ADD CONSTRAINT `FK_GEOMETRIC_ZONES_CONTROLS_END_ZONE_ID` FOREIGN KEY (`CONTROL_END_ZONE_ID`) REFERENCES `GEOMETRIC_ZONES` (`GEOMETRIC_ZONE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_TYPES` ADD CONSTRAINT `FK_ACTORS_EQUIPMENT_TYPES_MANUFACTURER_ID` FOREIGN KEY (`EQUIPMENT_TYPE_MANUFACTURER_ID`) REFERENCES `ACTORS` (`ACTOR_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ORGANS` ADD CONSTRAINT `FK_ACTORS_ORGANS_MANUFACTURER_ID` FOREIGN KEY (`ORGAN_MANUFACTURER_ID`) REFERENCES `ACTORS` (`ACTOR_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `SITES` ADD CONSTRAINT `FK_ACTORS_SITES_CUSTOMER_ID` FOREIGN KEY (`SITE_CUSTOMER_ID`) REFERENCES `ACTORS` (`ACTOR_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `INSPECTIONS` ADD CONSTRAINT `FK_ACTORS_INSPECTIONS_CONTRACTOR_ID` FOREIGN KEY (`INSPECTION_CONTRACTOR_ID`) REFERENCES `ACTORS` (`ACTOR_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `SELECTED_EQUIPMENTS` ADD CONSTRAINT `FK_ACQUISITION_LINES_SELECTED_EQUIPMENTS` FOREIGN KEY (`SELECTED_EQUIPMENT_ACQUISITION_LINE_ID`) REFERENCES `ACQUISITION_LINES` (`ACQUISITION_LINE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `SELECTED_CONTROLS` ADD CONSTRAINT `FK_ACQUISITION_LINES_SELECTED_CONTROLS` FOREIGN KEY (`SELECTED_CONTROL_ACQUISITION_LINE_ID`) REFERENCES `ACQUISITION_LINES` (`ACQUISITION_LINE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `EXAMS_ATTRIBUTES` ADD CONSTRAINT `FK_ATTRIBUTES_EXAMS_ATTRIBUTES` FOREIGN KEY (`EXAM_ATTRIBUTE_ATTRIBUTE_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `EXAMS_ATTRIBUTES` ADD CONSTRAINT `FK_EXAMS_EXAMS_ATTRIBUTES` FOREIGN KEY (`EXAM_ATTRIBUTE_EXAM_ID`) REFERENCES `EXAMS` (`EXAM_ID`) ON DELETE CASCADE ON UPDATE NO ACTION
;

ALTER TABLE `EQUIPMENT_TYPES` ADD CONSTRAINT `FK_ATTRIBUTES_EQUIPMENT_TYPES_AUTO_DETECT_CAT` FOREIGN KEY (`EQUIPMENT_TYPE_AUTO_DETECT_CATEGORY_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `ATTRIBUTES` ADD CONSTRAINT `FK_ATTRIBUTES_ATTRIBUTES_RELATED_ID` FOREIGN KEY (`ATTRIBUTE_RELATED_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `SG_GEOMETRIC_ZONES` ADD CONSTRAINT `FK_GEOMETRIC_ZONES_GEOMETRIC_ZONES_STEAM_GENERATORS` FOREIGN KEY (`SG_GEOMETRIC_ZONE_ID`) REFERENCES `GEOMETRIC_ZONES` (`GEOMETRIC_ZONE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `SG_GEOMETRIC_ZONES` ADD CONSTRAINT `FK_STEAM_GENERATORS_GEOMETRIC_ZONES_STEAM_GENERATORS` FOREIGN KEY (`SG_GEOMETRIC_ZONE_STEAM_GENERATOR_ID`) REFERENCES `STEAM_GENERATORS` (`STEAM_GENERATOR_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `GEOMETRIC_ZONES` ADD CONSTRAINT `FK_ATTRIBUTES_GEOMETRIC_ZONES_TYPES_ID` FOREIGN KEY (`GEOMETRIC_ZONE_TYPE_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE `STEAM_GENERATOR_TYPES` ADD CONSTRAINT `FK_ATTRIBUTES_STEAM_GENERATOR_TYPES_FORMULA_ID` FOREIGN KEY (`STEAM_GENERATOR_TYPE_FORMULA_ID`) REFERENCES `ATTRIBUTES` (`ATTRIBUTE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
;



/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
